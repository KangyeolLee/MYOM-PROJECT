{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/chatting/ChattingViewport.js\";\nimport React, { Fragment } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport { connect } from 'react-redux';\nimport { sendMessage } from '../../store/actions/chatAction';\nimport { Link } from 'react-router-dom';\n\nconst ChattingViewport = props => {\n  const chattingSubmit = e => {\n    e.preventDefault();\n    const sendBox = document.getElementById('message-sendbox');\n    const messageObject = {\n      sender: props.profile.initials,\n      message: sendBox.value\n    };\n    if (!sendBox.value) return;\n    props.sendMessage(messageObject, props.roomId);\n    sendBox.value = '';\n  };\n\n  const uploadFile = e => {\n    e.preventDefault();\n    if (!e.target.value) return;\n    const file = e.target.files[0];\n    const file_exe = file.name.split('.').pop().toLowerCase();\n    let file_type = 'etc';\n    if (file_exe === 'jpg' || file_exe === 'jpeg' || file_exe === 'png' || file_exe === 'gif') file_type = 'img';else if (file_exe === 'm4v' || file_exe === 'avi' || file_exe === 'mpg' || file_exe === 'mp4') file_type = 'video';\n    const messageObject = {\n      sender: props.profile.initials,\n      file,\n      fileName: file.name,\n      file_type\n    };\n    props.sendMessage(messageObject, props.roomId);\n    e.target.value = '';\n  };\n\n  const handleChange = e => {\n    const chattingRoom = document.querySelector('.chattingViewport');\n    console.log(chattingRoom.scrollTop, chattingRoom.scrollHeight - chattingRoom.clientHeight);\n\n    if (Math.abs(chattingRoom.scrollTop - (chattingRoom.scrollHeight - chattingRoom.clientHeight)) < 28) {\n      console.log('scroll executed');\n      chattingRoom.scrollTop = chattingRoom.scrollHeight;\n    }\n\n    const sendbox = document.getElementById('message-sendbox');\n    const sendboxHeight = Number(sendbox.style.height.split('px')[0]);\n    if (sendboxHeight > 150) sendbox.style.overflowY = 'scroll';else sendbox.style.overflowY = 'hidden';\n  };\n\n  const preventEnterSubmit = e => {\n    if (!e.target.value && e.keyCode === 13) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.which === 13 && !e.shiftKey) {\n      e.preventDefault();\n      chattingSubmit(e);\n      e.target.value = '';\n    }\n  };\n\n  const selected = props.selected,\n        profileImgs = props.profileImgs,\n        profile = props.profile,\n        roomId = props.roomId;\n  const partnerNickname = selected[0].users_nickName.filter(nickname => nickname !== profile.initials).join();\n  return React.createElement(\"ul\", {\n    className: \"collection chattingRoom row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: roomId,\n    className: \"col s12 chattingViewport\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s12 chatting-navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n    src: profileImgs[partnerNickname],\n    alt: \"\\uC720\\uC800 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n    width: \"50\",\n    height: \"50\",\n    className: \"circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: \"/img/defaults/userProfile.jpeg\",\n    alt: \"\\uC720\\uC800 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n    width: \"50\",\n    height: \"50\",\n    className: \"circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"partner-nickname scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, selected[0].users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"div\", {\n    className: \"col s12 divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col s12 chatting-messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, selected[0].messages.length && selected[0].messages.map((message, idx) => message.sender === profile.initials ? React.createElement(\"div\", {\n    key: message.sendAt,\n    className: \"message inRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, profileImgs[profile.initials] ? React.createElement(\"img\", {\n    src: profileImgs[profile.initials],\n    alt: \"\\uC720\\uC800 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n    width: \"42\",\n    height: \"42\",\n    className: \"circle text-sender right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: \"/img/defaults/userProfile.jpeg\",\n    alt: \"\\uC720\\uC800 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n    width: \"42\",\n    height: \"42\",\n    className: \"circle text-sender right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), message.message ? React.createElement(\"div\", {\n    className: \"text-message right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, message.message, React.createElement(\"span\", {\n    className: \"timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, moment(message.sendAt.toDate()).calendar(null, {\n    sameDay: 'LT',\n    lastDay: '어제',\n    lastWeek: 'YYYY-MM-DD',\n    sameElse: 'YYYY-MM-DD'\n  }))) : React.createElement(\"div\", {\n    className: \"file-message right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: message.file,\n    className: \"file-downloader\",\n    target: \"_blank\",\n    download: message.fileName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      backgroundColor: '#f0f0f2'\n    },\n    className: \"download-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons file-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, message.file_type === 'img' ? 'image' : message.file_type === 'video' ? 'movie' : 'folder'), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, message.fileName), React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"file_download\"))), React.createElement(\"span\", {\n    className: \"timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, moment(message.sendAt.toDate()).calendar(null, {\n    sameDay: 'LT',\n    lastDay: '어제',\n    lastWeek: 'YYYY-MM-DD',\n    sameElse: 'YYYY-MM-DD'\n  })))) : React.createElement(\"div\", {\n    key: message.sendAt,\n    className: \"message inLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n    src: profileImgs[partnerNickname],\n    alt: \"\\uC720\\uC800 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n    width: \"42\",\n    height: \"42\",\n    className: \"circle text-sender left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: \"/img/defaults/userProfile.jpeg\",\n    alt: \"\\uC720\\uC800 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n    width: \"42\",\n    height: \"42\",\n    className: \"circle text-sender left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), message.message ? React.createElement(\"div\", {\n    className: \"text-message left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, message.message, React.createElement(\"span\", {\n    className: \"timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, moment(message.sendAt.toDate()).calendar(null, {\n    sameDay: 'LT',\n    lastDay: '어제',\n    lastWeek: 'YYYY-MM-DD',\n    sameElse: 'YYYY-MM-DD'\n  }))) : React.createElement(\"div\", {\n    className: \"file-message left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: message.file,\n    className: \"file-downloader\",\n    target: \"_blank\",\n    download: message.fileName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      backgroundColor: '#d2e5ff'\n    },\n    className: \"download-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons file-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, message.file_type === 'img' ? 'image' : message.file_type === 'video' ? 'movie' : 'folder'), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, message.fileName), React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"file_download\"))), React.createElement(\"span\", {\n    className: \"timestamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, moment(message.sendAt.toDate()).calendar(null, {\n    sameDay: 'LT',\n    lastDay: '어제',\n    lastWeek: 'YYYY-MM-DD',\n    sameElse: 'YYYY-MM-DD'\n  })))))), React.createElement(\"div\", {\n    className: \"col s12 chatting-messages file-upload-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    onSubmit: chattingSubmit,\n    className: \"col s12 chatting-textbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s12 divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-field col s10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: handleChange,\n    onKeyDown: preventEnterSubmit,\n    type: \"text\",\n    name: \"message-sendbox\",\n    id: \"message-sendbox\",\n    className: \"materialize-textarea\",\n    placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"file-field input-field col s1 btn-flat center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    style: {\n      transform: 'rotate(25deg)'\n    },\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"attach_file\"), React.createElement(\"input\", {\n    onChange: uploadFile,\n    type: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"input-field col s1 btn-flat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"send\")))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: (chatData, chatId) => dispatch(sendMessage(chatData, chatId))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ChattingViewport);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/chatting/ChattingViewport.js"],"names":["React","Fragment","moment","connect","sendMessage","Link","ChattingViewport","props","chattingSubmit","e","preventDefault","sendBox","document","getElementById","messageObject","sender","profile","initials","message","value","roomId","uploadFile","target","file","files","file_exe","name","split","pop","toLowerCase","file_type","fileName","handleChange","chattingRoom","querySelector","console","log","scrollTop","scrollHeight","clientHeight","Math","abs","sendbox","sendboxHeight","Number","style","height","overflowY","preventEnterSubmit","keyCode","which","shiftKey","selected","profileImgs","partnerNickname","users_nickName","filter","nickname","join","messages","length","map","idx","sendAt","toDate","calendar","sameDay","lastDay","lastWeek","sameElse","backgroundColor","transform","mapDispatchToProps","dispatch","chatData","chatId"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport { connect } from 'react-redux'\nimport { sendMessage } from '../../store/actions/chatAction'\nimport { Link } from 'react-router-dom';\n\nconst ChattingViewport = (props) => {\n  const chattingSubmit = (e) => {\n    e.preventDefault();\n\n    const sendBox = document.getElementById('message-sendbox');\n    const messageObject = {\n      sender: props.profile.initials,\n      message: sendBox.value,\n    }\n\n    if(!sendBox.value) return;\n    props.sendMessage(messageObject, props.roomId);\n    sendBox.value = '';\n  }\n  const uploadFile = (e) => {\n    e.preventDefault();\n    if(!e.target.value) return;\n    \n    const file = e.target.files[0];\n    const file_exe = file.name.split('.').pop().toLowerCase();\n    let file_type = 'etc';\n\n    if(file_exe === 'jpg' || file_exe === 'jpeg' || file_exe === 'png' || file_exe === 'gif') file_type = 'img';\n    else if(file_exe === 'm4v' || file_exe === 'avi' || file_exe === 'mpg' || file_exe === 'mp4') file_type= 'video';\n\n    const messageObject = {\n      sender: props.profile.initials,\n      file,\n      fileName: file.name,\n      file_type,\n    }\n\n    props.sendMessage(messageObject, props.roomId);\n    e.target.value = '';\n  }\n  const handleChange = (e) => {\n    const chattingRoom = document.querySelector('.chattingViewport');\n    console.log(chattingRoom.scrollTop, chattingRoom.scrollHeight - chattingRoom.clientHeight);\n    if(Math.abs(chattingRoom.scrollTop - (chattingRoom.scrollHeight - chattingRoom.clientHeight)) < 28) {\n      console.log('scroll executed');\n      chattingRoom.scrollTop = chattingRoom.scrollHeight;\n    }\n\n    const sendbox = document.getElementById('message-sendbox');\n    const sendboxHeight = Number((sendbox.style.height).split('px')[0]);\n\n    if(sendboxHeight > 150) sendbox.style.overflowY = 'scroll'\n    else sendbox.style.overflowY = 'hidden';\n  }\n  const preventEnterSubmit = (e) => {\n    if(!e.target.value && e.keyCode === 13) {\n      e.preventDefault();\n      return;\n    }\n\t\tif(e.which === 13 && !e.shiftKey){\n      e.preventDefault();\n\n      chattingSubmit(e);\n      e.target.value = '';\n    }\n  }\n  const { selected, profileImgs, profile, roomId } = props;\n  const partnerNickname = selected[0].users_nickName.filter(nickname => nickname !== profile.initials).join();\n\n  return (\n    <ul className=\"collection chattingRoom row\">\n      <div id={roomId} className=\"col s12 chattingViewport\">\n        <div className=\"col s12 chatting-navbar\">\n          {\n            (profileImgs[partnerNickname])\n              ? <img src={profileImgs[partnerNickname]} alt=\"유저 프로필 이미지\" width='50' height='50' className='circle'/>\n              : <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" width='50' height='50' className='circle'/>\n          }\n          {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" width='50' height='50' className='circle'/> */}\n          <span className='partner-nickname scorelt'>{selected[0].users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n          <div className=\"col s12 divider\"></div>\n        </div>\n\n        <div className=\"col s12 chatting-messages\">\n          {\n            selected[0].messages.length && selected[0].messages.map((message, idx) => (message.sender === profile.initials)\n              ? (\n                <div key={message.sendAt} className=\"message inRight\">\n                  {\n                    (profileImgs[profile.initials])\n                      ? <img src={profileImgs[profile.initials]} alt=\"유저 프로필 이미지\" width='42' height='42' className=\"circle text-sender right\"/>\n                      : <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" width='42' height='42' className=\"circle text-sender right\"/>\n                  }\n                  {\n                    (message.message)\n                      ? (\n                        <div className=\"text-message right\">{message.message}\n                          <span className=\"timestamp\">{moment(message.sendAt.toDate()).calendar(null, {\n                            sameDay: 'LT',\n                            lastDay: '어제',                     \n                            lastWeek: 'YYYY-MM-DD',\n                            sameElse: 'YYYY-MM-DD'})}</span>\n                        </div>\n                      )\n                      : (\n                        <div className=\"file-message right\">\n                          <a href={message.file} className='file-downloader' target='_blank' download={message.fileName}>\n                            <p style={{backgroundColor: '#f0f0f2'}} className='download-file'>\n                              <i className=\"material-icons file-img\">{message.file_type === 'img' ? 'image' : message.file_type === 'video' ? 'movie' : 'folder'}</i>\n                              <span>{message.fileName}</span>\n                              <i className=\"material-icons\">file_download</i>\n                            </p>\n                          </a>\n                          <span className=\"timestamp\">{moment(message.sendAt.toDate()).calendar(null, {\n                            sameDay: 'LT',\n                            lastDay: '어제',                     \n                            lastWeek: 'YYYY-MM-DD',\n                            sameElse: 'YYYY-MM-DD'})}\n                          </span>                   \n                        </div>\n                      )\n                  }\n\n                  {/* 로그인 시 부여하는 Persistence.SESSION 이 expired 되는 시점을 catch 할 수 있어야 완벽한 구현이 가능 */}\n                  {/* 또는 realtime DB와 firestore를 연동해야 하지만, 이 경우 작성한 스크립트를 처음부터 다시 바꿔야 함 */}\n                  {/* 고로 읽음/안읽음 처리 기능을 잠시 제거 - 추후 개발 예정 */}\n                  {/* {\n                    (idx === selected[0].messages.length-1)\n                      ? (selected[0].isChecked) ? <span className='readMark'>읽음</span> : <span className='unreadMark'>안읽음</span>\n                      : null\n                  } */}\n                </div>\n              )\n              : (\n                <div key={message.sendAt} className=\"message inLeft\">    \n                  {\n                    (profileImgs[partnerNickname])\n                      ? <img src={profileImgs[partnerNickname]} alt=\"유저 프로필 이미지\" width='42' height='42' className=\"circle text-sender left\"/>\n                      : <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" width='42' height='42' className=\"circle text-sender left\"/>\n                  }  \n                  {\n                    (message.message)\n                      ? (\n                        <div className=\"text-message left\">{message.message}\n                          <span className=\"timestamp\">{moment(message.sendAt.toDate()).calendar(null, {\n                            sameDay: 'LT',\n                            lastDay: '어제',\n                            lastWeek: 'YYYY-MM-DD',\n                            sameElse: 'YYYY-MM-DD'})}</span>\n                        </div>\n                      )\n                      : (\n                        <div className=\"file-message left\">\n                          <a href={message.file} className='file-downloader' target='_blank' download={message.fileName}>\n                            <p style={{backgroundColor: '#d2e5ff'}} className='download-file'>\n                              <i className=\"material-icons file-img\">{message.file_type === 'img' ? 'image' : message.file_type === 'video' ? 'movie' : 'folder'}</i>\n                              <span>{message.fileName}</span>\n                              <i className=\"material-icons\">file_download</i>\n                            </p>\n                          </a>\n                          <span className=\"timestamp\">{moment(message.sendAt.toDate()).calendar(null, {\n                            sameDay: 'LT',\n                            lastDay: '어제',\n                            lastWeek: 'YYYY-MM-DD',\n                            sameElse: 'YYYY-MM-DD'})}</span>\n                        </div>\n                      )\n                  }\n\n                  \n                  {/* {\n                    (idx === selected[0].messages.length-1)\n                      ? (selected[0]['isJoined_' + partnerEmail] || selected[0].receiverHasRead) ? <span className='readMark'>읽음</span> : <span className='unreadMark'>안읽음</span>\n                      : null\n                  } */}\n                  \n                </div>\n              )\n            )\n          }\n        </div>\n        <div className=\"col s12 chatting-messages file-upload-area\"></div>\n      </div>\n\n      <form onSubmit={chattingSubmit} className=\"col s12 chatting-textbox\">\n        <div className=\"col s12\">\n          <div className=\"col s12 divider\"></div>           \n          <div className=\"input-field col s10\">\n            <textarea onChange={handleChange} onKeyDown={preventEnterSubmit} type='text' name=\"message-sendbox\" id='message-sendbox' className='materialize-textarea' placeholder='메시지를 입력하세요'></textarea>\n          </div>\n          <div className=\"file-field input-field col s1 btn-flat center\"><i style={{transform: 'rotate(25deg)'}} className=\"material-icons\">attach_file</i><input onChange={uploadFile} type=\"file\"/></div>\n          <button className=\"input-field col s1 btn-flat\"><i className=\"material-icons\">send</i></button>\n        </div>\n      </form>\n    </ul>\n  )\n}\nconst mapDispatchToProps = (dispatch) => {\n\treturn{\n\t\tsendMessage: (chatData, chatId) => dispatch(sendMessage(chatData, chatId)),\n\t}\n}\nexport default connect(null, mapDispatchToProps)(ChattingViewport);"]},"metadata":{},"sourceType":"module"}