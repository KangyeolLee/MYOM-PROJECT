{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.set = set;\nexports.get = get;\nexports.update = update;\nexports.deleteRef = deleteRef;\nexports.setListener = setListener;\nexports.setListeners = setListeners;\nexports.unsetListener = unsetListener;\nexports.unsetListeners = unsetListeners;\nexports.runTransaction = runTransaction;\nexports.default = void 0;\n\nvar _every2 = _interopRequireDefault(require(\"lodash/every\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _invoke2 = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _actions = require(\"../utils/actions\");\n\nvar _constants = require(\"../constants\");\n\nvar _query = require(\"../utils/query\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar pathListenerCounts = {};\n\nfunction add(firebase, dispatch, queryOption) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'add',\n    meta: meta,\n    args: args,\n    types: [_constants.actionTypes.ADD_REQUEST, {\n      type: _constants.actionTypes.ADD_SUCCESS,\n      payload: function payload(snap) {\n        return {\n          id: snap.id,\n          data: args[0]\n        };\n      }\n    }, _constants.actionTypes.ADD_FAILURE]\n  });\n}\n\nfunction set(firebase, dispatch, queryOption) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n    args[_key2 - 3] = arguments[_key2];\n  }\n\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'set',\n    meta: meta,\n    args: args,\n    types: [_constants.actionTypes.SET_REQUEST, _constants.actionTypes.SET_SUCCESS, _constants.actionTypes.SET_FAILURE]\n  });\n}\n\nfunction get(firebase, dispatch, queryOption) {\n  var meta = (0, _query.getQueryConfig)(queryOption);\n\n  var _ref = firebase._.config || {},\n      mergeOrdered = _ref.mergeOrdered,\n      mergeOrderedDocUpdates = _ref.mergeOrderedDocUpdates,\n      mergeOrderedCollectionUpdates = _ref.mergeOrderedCollectionUpdates;\n\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'get',\n    meta: meta,\n    types: [_constants.actionTypes.GET_REQUEST, {\n      type: _constants.actionTypes.GET_SUCCESS,\n      payload: function payload(snap) {\n        return {\n          data: (0, _query.dataByIdSnapshot)(snap),\n          ordered: (0, _query.orderedFromSnap)(snap)\n        };\n      },\n      merge: {\n        docs: mergeOrdered && mergeOrderedDocUpdates,\n        collections: mergeOrdered && mergeOrderedCollectionUpdates\n      }\n    }, _constants.actionTypes.GET_FAILURE]\n  });\n}\n\nfunction update(firebase, dispatch, queryOption) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n    args[_key3 - 3] = arguments[_key3];\n  }\n\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'update',\n    meta: meta,\n    args: args,\n    types: [_constants.actionTypes.UPDATE_REQUEST, _constants.actionTypes.UPDATE_SUCCESS, _constants.actionTypes.UPDATE_FAILURE]\n  });\n}\n\nfunction deleteRef(firebase, dispatch, queryOption) {\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  var config = firebase._.config;\n\n  if (!meta.doc || meta.subcollections && !(0, _every2.default)(meta.subcollections, 'doc')) {\n    if ((0, _isFunction2.default)(config.onAttemptCollectionDelete)) {\n      return config.onAttemptCollectionDelete(queryOption, dispatch, firebase);\n    }\n\n    return Promise.reject(new Error('Only documents can be deleted.'));\n  }\n\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'delete',\n    meta: meta,\n    types: [_constants.actionTypes.DELETE_REQUEST, {\n      type: _constants.actionTypes.DELETE_SUCCESS,\n      preserve: firebase._.config.preserveOnDelete\n    }, _constants.actionTypes.DELETE_FAILURE]\n  });\n}\n\nfunction setListener(firebase, dispatch, queryOpts, successCb, errorCb) {\n  var meta = (0, _query.getQueryConfig)(queryOpts);\n  var unsubscribe = (0, _query.firestoreRef)(firebase, meta).onSnapshot(function (docData) {\n    if (!meta.populates) {\n      (0, _query.dispatchListenerResponse)({\n        dispatch: dispatch,\n        docData: docData,\n        meta: meta,\n        firebase: firebase\n      });\n      if (typeof successCb === 'function') successCb(docData);\n      return;\n    }\n\n    (0, _query.getPopulateActions)({\n      firebase: firebase,\n      docData: docData,\n      meta: meta\n    }).then(function (populateActions) {\n      populateActions.forEach(function (populateAction) {\n        dispatch(_objectSpread({}, populateAction, {\n          type: _constants.actionTypes.LISTENER_RESPONSE,\n          timestamp: Date.now()\n        }));\n      });\n      (0, _query.dispatchListenerResponse)({\n        dispatch: dispatch,\n        docData: docData,\n        meta: meta,\n        firebase: firebase\n      });\n    }).catch(function (populateErr) {\n      if (firebase._.config.logListenerError) {\n        (0, _invoke2.default)(console, 'error', \"Error populating:\", populateErr);\n      }\n\n      if (typeof errorCb === 'function') errorCb(populateErr);\n    });\n  }, function (err) {\n    var _ref2 = firebase._.config || {},\n        mergeOrdered = _ref2.mergeOrdered,\n        mergeOrderedDocUpdates = _ref2.mergeOrderedDocUpdates,\n        mergeOrderedCollectionUpdates = _ref2.mergeOrderedCollectionUpdates;\n\n    var _ref3 = firebase._.config || {},\n        logListenerError = _ref3.logListenerError,\n        preserveOnListenerError = _ref3.preserveOnListenerError;\n\n    if (logListenerError) (0, _invoke2.default)(console, 'error', err);\n    dispatch({\n      type: _constants.actionTypes.LISTENER_ERROR,\n      meta: meta,\n      payload: err,\n      merge: {\n        docs: mergeOrdered && mergeOrderedDocUpdates,\n        collections: mergeOrdered && mergeOrderedCollectionUpdates\n      },\n      preserve: preserveOnListenerError\n    });\n    if (typeof errorCb === 'function') errorCb(err);\n  });\n  (0, _query.attachListener)(firebase, dispatch, meta, unsubscribe);\n  return unsubscribe;\n}\n\nfunction setListeners(firebase, dispatch, listeners) {\n  if (!(0, _isArray2.default)(listeners)) {\n    throw new Error('Listeners must be an Array of listener configs (Strings/Objects).');\n  }\n\n  var config = firebase._.config;\n\n  if (config.oneListenerPerPath) {\n    listeners.forEach(function (listener) {\n      var path = (0, _query.getQueryName)(listener);\n      var oldListenerCount = pathListenerCounts[path] || 0;\n      pathListenerCounts[path] = oldListenerCount + 1;\n\n      if (oldListenerCount > 0) {\n        return;\n      }\n\n      setListener(firebase, dispatch, listener);\n    });\n  } else {\n    var allowMultipleListeners = config.allowMultipleListeners;\n    listeners.forEach(function (listener) {\n      var path = (0, _query.getQueryName)(listener);\n      var oldListenerCount = pathListenerCounts[path] || 0;\n      var multipleListenersEnabled = (0, _isFunction2.default)(allowMultipleListeners) ? allowMultipleListeners(listener, firebase._.listeners) : allowMultipleListeners;\n      pathListenerCounts[path] = oldListenerCount + 1;\n\n      if (oldListenerCount === 0 || multipleListenersEnabled) {\n        setListener(firebase, dispatch, listener);\n      }\n    });\n  }\n}\n\nfunction unsetListener(firebase, dispatch, meta) {\n  return (0, _query.detachListener)(firebase, dispatch, (0, _query.getQueryConfig)(meta));\n}\n\nfunction unsetListeners(firebase, dispatch, listeners) {\n  if (!(0, _isArray2.default)(listeners)) {\n    throw new Error('Listeners must be an Array of listener configs (Strings/Objects).');\n  }\n\n  var config = firebase._.config;\n  var allowMultipleListeners = config.allowMultipleListeners;\n  listeners.forEach(function (listener) {\n    var path = (0, _query.getQueryName)(listener);\n    var listenerExists = pathListenerCounts[path] >= 1;\n    var multipleListenersEnabled = (0, _isFunction2.default)(allowMultipleListeners) ? allowMultipleListeners(listener, firebase._.listeners) : allowMultipleListeners;\n\n    if (listenerExists) {\n      pathListenerCounts[path] -= 1;\n\n      if (pathListenerCounts[path] === 0 || multipleListenersEnabled) {\n        unsetListener(firebase, dispatch, listener);\n      }\n    }\n  });\n}\n\nfunction runTransaction(firebase, dispatch, transactionPromise) {\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: firebase.firestore(),\n    method: 'runTransaction',\n    args: [transactionPromise],\n    types: [_constants.actionTypes.TRANSACTION_START, _constants.actionTypes.TRANSACTION_SUCCESS, _constants.actionTypes.TRANSACTION_FAILURE]\n  });\n}\n\nvar _default = {\n  get: get,\n  firestoreRef: _query.firestoreRef,\n  add: add,\n  update: update,\n  setListener: setListener,\n  setListeners: setListeners,\n  unsetListener: unsetListener,\n  unsetListeners: unsetListeners,\n  runTransaction: runTransaction\n};\nexports.default = _default;","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/node_modules/redux-firestore/es/actions/firestore.js"],"names":["Object","defineProperty","exports","value","add","set","get","update","deleteRef","setListener","setListeners","unsetListener","unsetListeners","runTransaction","default","_every2","_interopRequireDefault","require","_isFunction2","_invoke2","_isArray2","_actions","_constants","_query","obj","__esModule","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","pathListenerCounts","firebase","dispatch","queryOption","_len","args","Array","_key","meta","getQueryConfig","wrapInDispatch","ref","firestoreRef","method","types","actionTypes","ADD_REQUEST","type","ADD_SUCCESS","payload","snap","id","data","ADD_FAILURE","_len2","_key2","SET_REQUEST","SET_SUCCESS","SET_FAILURE","_ref","_","config","mergeOrdered","mergeOrderedDocUpdates","mergeOrderedCollectionUpdates","GET_REQUEST","GET_SUCCESS","dataByIdSnapshot","ordered","orderedFromSnap","merge","docs","collections","GET_FAILURE","_len3","_key3","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","doc","subcollections","onAttemptCollectionDelete","Promise","reject","Error","DELETE_REQUEST","DELETE_SUCCESS","preserve","preserveOnDelete","DELETE_FAILURE","queryOpts","successCb","errorCb","unsubscribe","onSnapshot","docData","populates","dispatchListenerResponse","getPopulateActions","then","populateActions","populateAction","LISTENER_RESPONSE","timestamp","Date","now","catch","populateErr","logListenerError","console","err","_ref2","_ref3","preserveOnListenerError","LISTENER_ERROR","attachListener","listeners","oneListenerPerPath","listener","path","getQueryName","oldListenerCount","allowMultipleListeners","multipleListenersEnabled","detachListener","listenerExists","transactionPromise","firestore","TRANSACTION_START","TRANSACTION_SUCCESS","TRANSACTION_FAILURE","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.set = set;\nexports.get = get;\nexports.update = update;\nexports.deleteRef = deleteRef;\nexports.setListener = setListener;\nexports.setListeners = setListeners;\nexports.unsetListener = unsetListener;\nexports.unsetListeners = unsetListeners;\nexports.runTransaction = runTransaction;\nexports.default = void 0;\n\nvar _every2 = _interopRequireDefault(require(\"lodash/every\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _invoke2 = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _actions = require(\"../utils/actions\");\n\nvar _constants = require(\"../constants\");\n\nvar _query = require(\"../utils/query\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar pathListenerCounts = {};\n\nfunction add(firebase, dispatch, queryOption) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'add',\n    meta: meta,\n    args: args,\n    types: [_constants.actionTypes.ADD_REQUEST, {\n      type: _constants.actionTypes.ADD_SUCCESS,\n      payload: function payload(snap) {\n        return {\n          id: snap.id,\n          data: args[0]\n        };\n      }\n    }, _constants.actionTypes.ADD_FAILURE]\n  });\n}\n\nfunction set(firebase, dispatch, queryOption) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n    args[_key2 - 3] = arguments[_key2];\n  }\n\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'set',\n    meta: meta,\n    args: args,\n    types: [_constants.actionTypes.SET_REQUEST, _constants.actionTypes.SET_SUCCESS, _constants.actionTypes.SET_FAILURE]\n  });\n}\n\nfunction get(firebase, dispatch, queryOption) {\n  var meta = (0, _query.getQueryConfig)(queryOption);\n\n  var _ref = firebase._.config || {},\n      mergeOrdered = _ref.mergeOrdered,\n      mergeOrderedDocUpdates = _ref.mergeOrderedDocUpdates,\n      mergeOrderedCollectionUpdates = _ref.mergeOrderedCollectionUpdates;\n\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'get',\n    meta: meta,\n    types: [_constants.actionTypes.GET_REQUEST, {\n      type: _constants.actionTypes.GET_SUCCESS,\n      payload: function payload(snap) {\n        return {\n          data: (0, _query.dataByIdSnapshot)(snap),\n          ordered: (0, _query.orderedFromSnap)(snap)\n        };\n      },\n      merge: {\n        docs: mergeOrdered && mergeOrderedDocUpdates,\n        collections: mergeOrdered && mergeOrderedCollectionUpdates\n      }\n    }, _constants.actionTypes.GET_FAILURE]\n  });\n}\n\nfunction update(firebase, dispatch, queryOption) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n    args[_key3 - 3] = arguments[_key3];\n  }\n\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'update',\n    meta: meta,\n    args: args,\n    types: [_constants.actionTypes.UPDATE_REQUEST, _constants.actionTypes.UPDATE_SUCCESS, _constants.actionTypes.UPDATE_FAILURE]\n  });\n}\n\nfunction deleteRef(firebase, dispatch, queryOption) {\n  var meta = (0, _query.getQueryConfig)(queryOption);\n  var config = firebase._.config;\n\n  if (!meta.doc || meta.subcollections && !(0, _every2.default)(meta.subcollections, 'doc')) {\n    if ((0, _isFunction2.default)(config.onAttemptCollectionDelete)) {\n      return config.onAttemptCollectionDelete(queryOption, dispatch, firebase);\n    }\n\n    return Promise.reject(new Error('Only documents can be deleted.'));\n  }\n\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: (0, _query.firestoreRef)(firebase, meta),\n    method: 'delete',\n    meta: meta,\n    types: [_constants.actionTypes.DELETE_REQUEST, {\n      type: _constants.actionTypes.DELETE_SUCCESS,\n      preserve: firebase._.config.preserveOnDelete\n    }, _constants.actionTypes.DELETE_FAILURE]\n  });\n}\n\nfunction setListener(firebase, dispatch, queryOpts, successCb, errorCb) {\n  var meta = (0, _query.getQueryConfig)(queryOpts);\n  var unsubscribe = (0, _query.firestoreRef)(firebase, meta).onSnapshot(function (docData) {\n    if (!meta.populates) {\n      (0, _query.dispatchListenerResponse)({\n        dispatch: dispatch,\n        docData: docData,\n        meta: meta,\n        firebase: firebase\n      });\n      if (typeof successCb === 'function') successCb(docData);\n      return;\n    }\n\n    (0, _query.getPopulateActions)({\n      firebase: firebase,\n      docData: docData,\n      meta: meta\n    }).then(function (populateActions) {\n      populateActions.forEach(function (populateAction) {\n        dispatch(_objectSpread({}, populateAction, {\n          type: _constants.actionTypes.LISTENER_RESPONSE,\n          timestamp: Date.now()\n        }));\n      });\n      (0, _query.dispatchListenerResponse)({\n        dispatch: dispatch,\n        docData: docData,\n        meta: meta,\n        firebase: firebase\n      });\n    }).catch(function (populateErr) {\n      if (firebase._.config.logListenerError) {\n        (0, _invoke2.default)(console, 'error', \"Error populating:\", populateErr);\n      }\n\n      if (typeof errorCb === 'function') errorCb(populateErr);\n    });\n  }, function (err) {\n    var _ref2 = firebase._.config || {},\n        mergeOrdered = _ref2.mergeOrdered,\n        mergeOrderedDocUpdates = _ref2.mergeOrderedDocUpdates,\n        mergeOrderedCollectionUpdates = _ref2.mergeOrderedCollectionUpdates;\n\n    var _ref3 = firebase._.config || {},\n        logListenerError = _ref3.logListenerError,\n        preserveOnListenerError = _ref3.preserveOnListenerError;\n\n    if (logListenerError) (0, _invoke2.default)(console, 'error', err);\n    dispatch({\n      type: _constants.actionTypes.LISTENER_ERROR,\n      meta: meta,\n      payload: err,\n      merge: {\n        docs: mergeOrdered && mergeOrderedDocUpdates,\n        collections: mergeOrdered && mergeOrderedCollectionUpdates\n      },\n      preserve: preserveOnListenerError\n    });\n    if (typeof errorCb === 'function') errorCb(err);\n  });\n  (0, _query.attachListener)(firebase, dispatch, meta, unsubscribe);\n  return unsubscribe;\n}\n\nfunction setListeners(firebase, dispatch, listeners) {\n  if (!(0, _isArray2.default)(listeners)) {\n    throw new Error('Listeners must be an Array of listener configs (Strings/Objects).');\n  }\n\n  var config = firebase._.config;\n\n  if (config.oneListenerPerPath) {\n    listeners.forEach(function (listener) {\n      var path = (0, _query.getQueryName)(listener);\n      var oldListenerCount = pathListenerCounts[path] || 0;\n      pathListenerCounts[path] = oldListenerCount + 1;\n\n      if (oldListenerCount > 0) {\n        return;\n      }\n\n      setListener(firebase, dispatch, listener);\n    });\n  } else {\n    var allowMultipleListeners = config.allowMultipleListeners;\n    listeners.forEach(function (listener) {\n      var path = (0, _query.getQueryName)(listener);\n      var oldListenerCount = pathListenerCounts[path] || 0;\n      var multipleListenersEnabled = (0, _isFunction2.default)(allowMultipleListeners) ? allowMultipleListeners(listener, firebase._.listeners) : allowMultipleListeners;\n      pathListenerCounts[path] = oldListenerCount + 1;\n\n      if (oldListenerCount === 0 || multipleListenersEnabled) {\n        setListener(firebase, dispatch, listener);\n      }\n    });\n  }\n}\n\nfunction unsetListener(firebase, dispatch, meta) {\n  return (0, _query.detachListener)(firebase, dispatch, (0, _query.getQueryConfig)(meta));\n}\n\nfunction unsetListeners(firebase, dispatch, listeners) {\n  if (!(0, _isArray2.default)(listeners)) {\n    throw new Error('Listeners must be an Array of listener configs (Strings/Objects).');\n  }\n\n  var config = firebase._.config;\n  var allowMultipleListeners = config.allowMultipleListeners;\n  listeners.forEach(function (listener) {\n    var path = (0, _query.getQueryName)(listener);\n    var listenerExists = pathListenerCounts[path] >= 1;\n    var multipleListenersEnabled = (0, _isFunction2.default)(allowMultipleListeners) ? allowMultipleListeners(listener, firebase._.listeners) : allowMultipleListeners;\n\n    if (listenerExists) {\n      pathListenerCounts[path] -= 1;\n\n      if (pathListenerCounts[path] === 0 || multipleListenersEnabled) {\n        unsetListener(firebase, dispatch, listener);\n      }\n    }\n  });\n}\n\nfunction runTransaction(firebase, dispatch, transactionPromise) {\n  return (0, _actions.wrapInDispatch)(dispatch, {\n    ref: firebase.firestore(),\n    method: 'runTransaction',\n    args: [transactionPromise],\n    types: [_constants.actionTypes.TRANSACTION_START, _constants.actionTypes.TRANSACTION_SUCCESS, _constants.actionTypes.TRANSACTION_FAILURE]\n  });\n}\n\nvar _default = {\n  get: get,\n  firestoreRef: _query.firestoreRef,\n  add: add,\n  update: update,\n  setListener: setListener,\n  setListeners: setListeners,\n  unsetListener: unsetListener,\n  unsetListeners: unsetListeners,\n  runTransaction: runTransaction\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}