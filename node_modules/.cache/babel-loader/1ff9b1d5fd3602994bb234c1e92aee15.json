{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/mypage/ProfitsManage.js\";\nimport React, { Component, Fragment } from 'react';\nimport M from 'materialize-css';\nimport './profitsManage.css';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport Preloader from '../functionalComponents/Preloader';\nimport Pagination from '../functionalComponents/Pagination';\nimport moment from 'moment';\n\nclass ProfitsManage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      curPage: 1,\n      perPage: 5\n    };\n\n    this.paginate = pageNum => {\n      this.setState({\n        curPage: pageNum\n      });\n    };\n  }\n\n  componentDidMount() {\n    M.AutoInit();\n  }\n\n  render() {\n    const orderList = this.props.orderList;\n    const _this$state = this.state,\n          curPage = _this$state.curPage,\n          perPage = _this$state.perPage;\n    let indexOfLast = curPage * perPage;\n    let indexOfFirst = indexOfLast - perPage; // const data = [\n    //   { name: '2019-04', uv: 400, pv: 2400, amt: 2400},\n    //   { name: '2019-05', uv: 300, pv: 2400, amt: 2400},\n    //   { name: '2019-06', uv: 200, pv: 2400, amt: 2400},\n    //   { name: '2019-07', uv: 100, pv: 2400, amt: 2400},\n    //   { name: '2019-08', uv: 500, pv: 2400, amt: 2400}\n    // ];\n    // const renderLineChart = (\n    //   <LineChart width={958} height={300} data={data}>\n    //     <Line type='monotone' dataKey='uv' stroke='red' />\n    //     <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n    //     <XAxis dataKey=\"name\" />\n    //     <YAxis />\n    //     <Tooltip />\n    //   </LineChart>\n    // )\n\n    return React.createElement(\"div\", {\n      className: \"profitsManage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"col s12 scorehvy sub-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\uC218\\uC775 \\uAD00\\uB9AC\"), React.createElement(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, !isLoaded(orderList) ? React.createElement(\"div\", {\n      className: \"collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })) : isEmpty(orderList) ? React.createElement(\"div\", {\n      className: \"collection no-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collection-item-wrapper center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"info_outline\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\uB0B4\\uC5ED\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"))) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        marginBottom: '3rem'\n      },\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"grey lighten-3 scorehvy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\uAD6C\\uB9E4\\uC790\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\uD560\\uC778 \\uBC0F \\uC218\\uC218\\uB8CC\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\uAD6C\\uC785 \\uC77C\\uC790\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\uC218\\uC775\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\uC9C0\\uAE09 \\uC5EC\\uBD80\"))), React.createElement(\"tbody\", {\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, orderList.slice(indexOfFirst, indexOfLast).map((list, index) => React.createElement(\"tr\", {\n      key: list.service_id + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, list.buyer_nickName), React.createElement(\"td\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u20A9 0\\uC6D0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, moment(list.purchasedAt.toDate()).format('YYYY.MM.DD HH:mm분')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u20A9 \", list.price, \"\\uC6D0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, list.review ? React.createElement(\"font\", {\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\uC9C0\\uAE09\\uC608\\uC815\") : list.payback ? React.createElement(\"font\", {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\uC9C0\\uAE09\\uC644\\uB8CC\") : React.createElement(\"font\", {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\uC544\\uB2C8\\uC624\")))))), React.createElement(Pagination, {\n      pages: Math.ceil(orderList.length / perPage),\n      paginate: this.paginate,\n      curPage: this.state.curPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    orderList: state.firestore.ordered.orderList\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect(props => {\n  const uid = !isLoaded(props.auth.uid) ? null : props.auth.uid;\n  return [{\n    collection: 'purchaseList',\n    where: ['provider_id', '==', uid],\n    orderBy: ['purchasedAt', 'desc'],\n    storeAs: 'orderList'\n  }];\n}))(ProfitsManage);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/mypage/ProfitsManage.js"],"names":["React","Component","Fragment","M","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","compose","connect","firestoreConnect","isLoaded","isEmpty","Preloader","Pagination","moment","ProfitsManage","state","curPage","perPage","paginate","pageNum","setState","componentDidMount","AutoInit","render","orderList","props","indexOfLast","indexOfFirst","marginBottom","slice","map","list","index","service_id","buyer_nickName","purchasedAt","toDate","format","price","review","payback","Math","ceil","length","mapStateToProps","auth","firebase","firestore","ordered","uid","collection","where","orderBy","storeAs"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport M from 'materialize-css';\nimport './profitsManage.css';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport Preloader from '../functionalComponents/Preloader';\nimport Pagination from '../functionalComponents/Pagination';\nimport moment from 'moment';\n\nclass ProfitsManage extends Component {\n  state = {\n    curPage: 1,\n    perPage: 5,\n  }\n  \n  componentDidMount() {\n    M.AutoInit();\n  }\n  paginate = (pageNum) => {\n    this.setState({\n      curPage: pageNum, \n    })\n  }\n  render() {\n    const { orderList } = this.props;\n    const { curPage, perPage } = this.state;\n    let indexOfLast = curPage * perPage;\n    let indexOfFirst = indexOfLast - perPage;\n    // const data = [\n    //   { name: '2019-04', uv: 400, pv: 2400, amt: 2400},\n    //   { name: '2019-05', uv: 300, pv: 2400, amt: 2400},\n    //   { name: '2019-06', uv: 200, pv: 2400, amt: 2400},\n    //   { name: '2019-07', uv: 100, pv: 2400, amt: 2400},\n    //   { name: '2019-08', uv: 500, pv: 2400, amt: 2400}\n    // ];\n    // const renderLineChart = (\n    //   <LineChart width={958} height={300} data={data}>\n    //     <Line type='monotone' dataKey='uv' stroke='red' />\n    //     <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n    //     <XAxis dataKey=\"name\" />\n    //     <YAxis />\n    //     <Tooltip />\n    //   </LineChart>\n    // )\n    return (\n      <div className=\"profitsManage\">\n        <div className=\"row\">\n          <h5 className='col s12 scorehvy sub-title'>수익 관리</h5>\n          <div className=\"col s12\">               \n            {\n              !isLoaded(orderList)\n                ? <div className=\"collection\"><Preloader /></div>\n                : isEmpty(orderList)\n                  ? (\n                    <div className=\"collection no-data\">\n                      <div className=\"collection-item-wrapper center\">\n                        <i className=\"material-icons large\">info_outline</i>\n                        <p>내역이 없습니다</p>\n                      </div>\n                    </div>\n                  )\n                  : (\n                    <Fragment>\n                    <table style={{marginBottom: '3rem'}} className='centered'>\n                      <thead className='grey lighten-3 scorehvy'>\n                        <tr>\n                          <th>구매자</th>\n                          <th>할인 및 수수료</th>\n                          <th>구입 일자</th>\n                          <th>수익</th>\n                          <th>지급 여부</th>\n                        </tr>\n                      </thead>\n                      <tbody className='white'>\n                        {\n                          orderList.slice(indexOfFirst,indexOfLast).map((list, index) => (\n                            <tr key={list.service_id + index}>\n                              <td>{list.buyer_nickName}</td>\n                              <td className='red-text'>₩ 0원</td>\n                              <td>{moment(list.purchasedAt.toDate()).format('YYYY.MM.DD HH:mm분')}</td>\n                              <td>₩ {list.price}원</td>\n                              <td>{list.review ? <font color='green'>지급예정</font> : list.payback ? <font color='blue'>지급완료</font> : <font color='red'>아니오</font>}</td>\n                            </tr>\n                          ))\n                        }                      \n                      </tbody>\n                    </table>\n\n                    <Pagination pages={Math.ceil(orderList.length / perPage)} paginate={this.paginate} curPage={this.state.curPage} />\n                    </Fragment>\n                  ) \n            } \n            </div>\n          </div>\n        {/* <div className=\"row\">\n          <h4>수익관리</h4>\n          <div className=\"profits_details collection s12\">\n            <div className=\"collection-wrapper col s6\">\n              <i className=\"material-icons large\">attach_money</i>\n              <div>\n                <p>출금가능 수익금</p>\n                <h5>0원</h5>\n              </div>          \n            </div>\n\n            <div className=\"collection-wrapper col s3 center\">\n              <h5>예상 수익금</h5>\n              <p>0원</p>\n            </div>\n\n            <div className=\"collection-wrapper col s3 center\">\n              <h5>출금 완료 수익금</h5>\n              <p>0원</p>\n            </div>\n          </div>\n\n          <p className=\"right\">일별 | 월별</p>\n          <div className=\"recharts s12\">\n            { renderLineChart }\n          </div>\n\n          <div className=\"col s12\">\n            <ul className=\"tabs\">\n              <li className=\"tab col s3\"><a href=\"#profitsLog\">수익금 내역</a></li>\n              <li className=\"tab col s3\"><a href=\"#depositsLog\">출금내역</a></li>\n              <li className=\"tab col s3\"><a href=\"#taxDetails\">월별 수수료 세금계산서</a></li>\n            </ul>\n          </div>\n\n          <div id=\"profitsLog\">\n            <div className=\"input-field col s1\">\n              <select name=\"\" id=\"profits_range\">\n                <option value=\"1\">전체</option>\n                <option value=\"2\">완료</option>\n                <option value=\"3\">진행중</option>\n                <option value=\"4\">취소</option>\n              </select>\n            </div>\n            <div className=\"collection col s12\">\n              <div className=\"collection-wrapper\">\n                <i className=\"material-icons large\">info_outline</i>\n                <p>내역이 없습니다</p>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"depositsLog\">\n            <div className=\"collection\">\n              <div className=\"collection-wrapper\">\n                <i className=\"material-icons large\">info_outline</i>\n                <p>내역이 없습니다</p>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"taxDetails\">\n            <div className=\"collection\">\n              <div className=\"collection-wrapper\">\n                <i className=\"material-icons large\">info_outline</i>\n                <p>내역이 없습니다</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"collection row grey lighten-4\">\n          <div className=\"col s12 warning\">\n            <span><i style={{fontSize: '18px'}} className=\"material-icons left\">error_outline</i> 꼭 확인해주세요!</span><br/>\n            <span><i style={{fontSize: '18px'}} className=\"material-icons left\">check</i> 할인 쿠폰을 적용해서 구매한 의뢰인에게는 쿠폰 금액 제외한 금액으로 세금계산서를 발행해야 합니다.</span><br/>\n            <span><i style={{fontSize: '18px'}} className=\"material-icons left\">check</i> 크몽이 전문가에게 할인된 쿠폰 금액에 대해 보전하여 수익금으로 정산하기 때문에 매출 신고 시에는 전체 판매 금액으로 신고해야 합니다.</span><br/>\n            <span>(적립캐시 사용은 할인쿠폰 적용과 무관하니 일반 거래건과 동일하게 진행해주시길 바랍니다.)</span><br/><br/>\n            <span><i style={{fontSize: '18px'}} className=\"material-icons left\">error_outline</i> 매출신고 방법 안내!</span><br/>\n            <span><i style={{fontSize: '18px'}} className=\"material-icons left\">check</i> 크몽은 전문가의 매출 신고방법을 따로 안내해 드리지 않으며 매출 신고와 관련된 문의사항은 국세청이나 세무사무실에 문의바랍니다.</span><br/>\n            <span><i style={{fontSize: '18px'}} className=\"material-icons left\">check</i> 월별 출금내역은 세무 신고 시의 참고이며 반드시 귀사의 회계자료와 비교 후 처리하시기 바랍니다.</span><br/>\n          </div>\n        </div> */}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    orderList: state.firestore.ordered.orderList,\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => {\n    const uid = !isLoaded(props.auth.uid) ? null : props.auth.uid;\n    return [\n      { collection: 'purchaseList', where: ['provider_id', '==', uid], orderBy: ['purchasedAt', 'desc'], storeAs: 'orderList' }\n    ]\n  })\n)(ProfitsManage);"]},"metadata":{},"sourceType":"module"}