{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = reduxFirestoreMiddleware;\nexports.CALL_FIRESTORE = void 0;\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction callFirestore(firebaseInstance, callInfoObj) {\n  var method = callInfoObj.method;\n  var modelArgs = callInfoObj.modelArgs,\n      methodArgs = callInfoObj.methodArgs;\n  if (!(0, _isArray2.default)(modelArgs)) modelArgs = [modelArgs];\n  if (!(0, _isArray2.default)(methodArgs)) methodArgs = [methodArgs];\n\n  if (!firebaseInstance || !firebaseInstance.firestore) {\n    throw new Error('firestore is not a Firebase namespace');\n  }\n\n  return !methodArgs ? firebaseInstance.firestore()[method] : firebaseInstance.firestore()[method].apply(firebaseInstance, methodArgs);\n}\n\nvar CALL_FIRESTORE = 'CALL_FIRESTORE';\nexports.CALL_FIRESTORE = CALL_FIRESTORE;\nvar typesMap = {\n  get: [_constants.actionTypes.GET_REQUEST, _constants.actionTypes.GET_SUCCESS, _constants.actionTypes.GET_FAILURE]\n};\n\nfunction reduxFirestoreMiddleware(firestore) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var callAPI = action.type === CALL_FIRESTORE ? action : undefined;\n        if (typeof callAPI === 'undefined') return next(action);\n        var method = callAPI.method;\n        if (typeof method === 'function') method = method(store.getState());\n        if (typeof method !== 'string') throw new Error('Specify a method.');\n        var args = callAPI.args;\n        var types = typesMap[method];\n\n        if (!Array.isArray(types) || types.length !== 3) {\n          throw new Error('Expected an array of three action types.');\n        }\n\n        if (!types.every(function (type) {\n          return typeof type === 'string';\n        })) {\n          throw new Error('Expected action types to be strings.');\n        }\n\n        function actionWith(data) {\n          var finalAction = Object.assign({}, action, data);\n          delete finalAction[CALL_FIRESTORE];\n          return finalAction;\n        }\n\n        var _types = _slicedToArray(types, 3),\n            requestType = _types[0],\n            successType = _types[1],\n            failureType = _types[2];\n\n        next({\n          type: requestType\n        });\n        var callInfoObj = {\n          method: method\n        };\n        return callFirestore(firestore, callInfoObj).then(function (response) {\n          return next({\n            response: response,\n            method: method,\n            args: args,\n            type: successType\n          });\n        }).catch(function (error) {\n          return next(actionWith({\n            type: failureType,\n            error: error.message || error || 'Something bad happened'\n          }));\n        });\n      };\n    };\n  };\n}","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/node_modules/redux-firestore/es/middleware.js"],"names":["Object","defineProperty","exports","value","default","reduxFirestoreMiddleware","CALL_FIRESTORE","_isArray2","_interopRequireDefault","require","_constants","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","callFirestore","firebaseInstance","callInfoObj","method","modelArgs","methodArgs","firestore","Error","apply","typesMap","get","actionTypes","GET_REQUEST","GET_SUCCESS","GET_FAILURE","store","action","callAPI","type","getState","args","types","every","actionWith","data","finalAction","assign","_types","requestType","successType","failureType","then","response","catch","error","message"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = reduxFirestoreMiddleware;\nexports.CALL_FIRESTORE = void 0;\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction callFirestore(firebaseInstance, callInfoObj) {\n  var method = callInfoObj.method;\n  var modelArgs = callInfoObj.modelArgs,\n      methodArgs = callInfoObj.methodArgs;\n  if (!(0, _isArray2.default)(modelArgs)) modelArgs = [modelArgs];\n  if (!(0, _isArray2.default)(methodArgs)) methodArgs = [methodArgs];\n\n  if (!firebaseInstance || !firebaseInstance.firestore) {\n    throw new Error('firestore is not a Firebase namespace');\n  }\n\n  return !methodArgs ? firebaseInstance.firestore()[method] : firebaseInstance.firestore()[method].apply(firebaseInstance, methodArgs);\n}\n\nvar CALL_FIRESTORE = 'CALL_FIRESTORE';\nexports.CALL_FIRESTORE = CALL_FIRESTORE;\nvar typesMap = {\n  get: [_constants.actionTypes.GET_REQUEST, _constants.actionTypes.GET_SUCCESS, _constants.actionTypes.GET_FAILURE]\n};\n\nfunction reduxFirestoreMiddleware(firestore) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var callAPI = action.type === CALL_FIRESTORE ? action : undefined;\n        if (typeof callAPI === 'undefined') return next(action);\n        var method = callAPI.method;\n        if (typeof method === 'function') method = method(store.getState());\n        if (typeof method !== 'string') throw new Error('Specify a method.');\n        var args = callAPI.args;\n        var types = typesMap[method];\n\n        if (!Array.isArray(types) || types.length !== 3) {\n          throw new Error('Expected an array of three action types.');\n        }\n\n        if (!types.every(function (type) {\n          return typeof type === 'string';\n        })) {\n          throw new Error('Expected action types to be strings.');\n        }\n\n        function actionWith(data) {\n          var finalAction = Object.assign({}, action, data);\n          delete finalAction[CALL_FIRESTORE];\n          return finalAction;\n        }\n\n        var _types = _slicedToArray(types, 3),\n            requestType = _types[0],\n            successType = _types[1],\n            failureType = _types[2];\n\n        next({\n          type: requestType\n        });\n        var callInfoObj = {\n          method: method\n        };\n        return callFirestore(firestore, callInfoObj).then(function (response) {\n          return next({\n            response: response,\n            method: method,\n            args: args,\n            type: successType\n          });\n        }).catch(function (error) {\n          return next(actionWith({\n            type: failureType,\n            error: error.message || error || 'Something bad happened'\n          }));\n        });\n      };\n    };\n  };\n}"]},"metadata":{},"sourceType":"script"}