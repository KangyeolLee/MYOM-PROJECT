{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/community/CreatePost.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost, postUpdate } from '../../store/actions/postAction';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { stateToHTML } from 'draft-js-export-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './createPost.css';\n\nclass CreatePost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post_id: this.props.location.post_id || '',\n      title: this.props.location.title || '',\n      content: this.props.location.content || '',\n      post_img: this.props.location.post_img || '',\n      check_update: this.props.location.check_update || false,\n      editorState: EditorState.createEmpty()\n    };\n\n    this.handleRevise = content => {\n      const contentState = convertFromRaw(content);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        editorState\n      });\n    };\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleConvert = editorState => {\n      const contentState = editorState.getCurrentContent(); // let test2= stateToHTML(contentState);\n\n      let test = convertToRaw(contentState);\n      console.log(test, contentState);\n      this.setState({\n        editorState,\n        content: test\n      });\n    };\n\n    this.uploadFile = e => {\n      this.setState({\n        [e.target.id]: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const check_btn_type = e.target.querySelector('button').name;\n\n      if (check_btn_type === 'update_btn') {\n        this.props.postUpdate(this.state, this.props.match.params.category, this.props.history);\n      } else {\n        this.props.createPost(this.state, this.props.match.params.category, this.props.history);\n      }\n    };\n  }\n\n  render() {\n    const auth = this.props.auth;\n    const check_update = this.state.check_update;\n    if (!auth.uid) return React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\uC0C8\\uB85C\\uC6B4 \\uD3EC\\uC2A4\\uD305 \\uC791\\uC131\"), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: this.handleChange,\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"myEditor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      editorState: this.state.editorState,\n      toolbarClassName: \"toolbarClassName\",\n      wrapperClassName: \"wrapperClassName\",\n      editorClassName: \"editorClassName\",\n      localization: {\n        locale: 'ko'\n      },\n      onEditorStateChange: this.handleConvert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn myomColor-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons myomColor-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"file_upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"post_img\",\n      onChange: this.uploadFile,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"file-path validate\",\n      placeholder: \"\\uC378\\uB124\\uC77C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC5C5\\uB85C\\uB4DC \\uD558\\uC138\\uC694.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), check_update ? React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"update_btn\",\n      className: \"btn indigo right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uD558\\uAE30\")) : React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"create_btn\",\n      className: \"btn right myomColor-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uD558\\uAE30\"))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createPost: (postData, category, history) => dispatch(createPost(postData, category, history)),\n    postUpdate: (postData, category, history) => dispatch(postUpdate(postData, category, history))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/community/CreatePost.js"],"names":["React","Component","Link","connect","createPost","postUpdate","Editor","EditorState","convertToRaw","convertFromRaw","draftToHtml","htmlToDraft","stateToHTML","CreatePost","state","post_id","props","location","title","content","post_img","check_update","editorState","createEmpty","handleRevise","contentState","createWithContent","setState","onEditorStateChange","handleChange","e","target","id","value","handleConvert","getCurrentContent","test","console","log","uploadFile","files","handleSubmit","preventDefault","check_btn_type","querySelector","name","match","params","category","history","render","auth","uid","locale","mapStateToProps","ownProps","firebase","mapDispatchToProps","dispatch","postData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createPost, postUpdate } from '../../store/actions/postAction'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { stateToHTML } from 'draft-js-export-html'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './createPost.css'\n\nclass CreatePost extends Component {\n\tstate = {\n\t\tpost_id: this.props.location.post_id || '',\n\t\ttitle: this.props.location.title ||'',\n\t\tcontent: this.props.location.content ||'',\n\t\tpost_img: this.props.location.post_img ||'',\n\t\tcheck_update: this.props.location.check_update || false,\n\t\teditorState: EditorState.createEmpty(),\n\t}\n\t\n\thandleRevise = (content) => {\n\t\tconst contentState = convertFromRaw(content);\n\t\tconst editorState = EditorState.createWithContent(contentState);\n\t\tthis.setState({\n\t\t\teditorState,\n\t\t});\n\t}\n\n\tonEditorStateChange = (editorState) => {\n\t\tthis.setState({\n\t\t\teditorState,\n\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.id] : e.target.value\n\t\t})\n\t}\n\n\thandleConvert = (editorState) => {\n\t\tconst contentState = editorState.getCurrentContent();\n\t\t// let test2= stateToHTML(contentState);\n\t\tlet test= convertToRaw(contentState);\n\t\tconsole.log(test, contentState);\n\t\tthis.setState({\n\t\t\teditorState,\n\t\t\tcontent: test,\n\t\t}); \n\t}\n\tuploadFile = (e) => {\n    this.setState({\n      [e.target.id] : e.target.files[0]\n    })\n\t}\n\t\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst check_btn_type = e.target.querySelector('button').name;\n\t\tif(check_btn_type === 'update_btn') {\n\t\t\tthis.props.postUpdate(this.state, this.props.match.params.category, this.props.history)\n\t\t} else{\n\t\t\tthis.props.createPost(this.state, this.props.match.params.category, this.props.history);\n\t\t}\n\t}\n\n\trender(){\n\t\tconst { auth } = this.props;\n\t\tconst {check_update} = this.state;\n\t\tif(!auth.uid) return <Link to ='/signin' />\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<h5>새로운 포스팅 작성</h5>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"title\">제목</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={this.handleChange} value= {this.state.title} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"myEditor\">\n\t\t\t\t\t\t<Editor \n\t\t\t\t\t\t\teditorState={this.state.editorState}\n\t\t\t\t\t\t\ttoolbarClassName=\"toolbarClassName\"\n\t\t\t\t\t\t\twrapperClassName=\"wrapperClassName\"\n\t\t\t\t\t\t\teditorClassName=\"editorClassName\"\n\t\t\t\t\t\t\tlocalization={{\n\t\t\t\t\t\t\t\tlocale: 'ko',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonEditorStateChange={this.handleConvert}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"file-field input-field\">\n\t\t\t\t\t\t<div className=\"btn myomColor-background\">\n\t\t\t\t\t\t\t<i className=\"material-icons myomColor-background\">file_upload</i>\n\t\t\t\t\t\t\t<input type=\"file\" id='post_img' onChange={this.uploadFile} required/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"file-path-wrapper\">\n\t\t\t\t\t\t\t<input type=\"text\" className=\"file-path validate\" placeholder='썸네일 이미지를 업로드 하세요.'/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tcheck_update\n\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t<button name='update_btn' className=\"btn indigo right\">수정하기</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t<button name='create_btn' className=\"btn right myomColor-background\">작성하기</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tauth: state.firebase.auth\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tcreatePost: (postData, category, history) => dispatch(createPost(postData,category, history)),\n\t\tpostUpdate: (postData, category, history) => dispatch(postUpdate(postData,category,history))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost)"]},"metadata":{},"sourceType":"module"}