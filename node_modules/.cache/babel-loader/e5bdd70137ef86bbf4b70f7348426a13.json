{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode) {\n  var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (node) {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  var idx = -1;\n  containerInfo.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var restorePaddings = [];\n  var container = containerInfo.container;\n  var fixedNodes;\n\n  if (!props.disableScrollLock) {\n    var overflowing = isOverflowing(container); // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n    var parent = container.parentElement;\n    var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container;\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    }); // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    scrollContainer.style.overflow = 'hidden';\n\n    if (overflowing) {\n      var scrollbarSize = getScrollbarSize();\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, function (node) {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = \"\".concat(getPaddingRight(node) + scrollbarSize, \"px\");\n      });\n    }\n  }\n\n  var restore = function restore() {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, function (node, i) {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          key = _ref.key;\n\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (node) {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager =\n/*#__PURE__*/\nfunction () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager); // this.modals[modalIndex] = modal\n\n\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblingNodes = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblingNodes: hiddenSiblingNodes\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/node_modules/@material-ui/core/esm/Modal/ModalManager.js"],"names":["_classCallCheck","_createClass","_toConsumableArray","getScrollbarSize","ownerDocument","ownerWindow","isOverflowing","container","doc","body","innerWidth","documentElement","clientWidth","scrollHeight","clientHeight","ariaHidden","node","show","setAttribute","removeAttribute","getPaddingRight","parseInt","window","getComputedStyle","ariaHiddenSiblings","mountNode","currentNode","nodesToExclude","arguments","length","undefined","blacklist","concat","blacklistTagNames","forEach","call","children","nodeType","indexOf","tagName","findIndexOf","containerInfo","callback","idx","some","item","index","handleContainer","props","restoreStyle","restorePaddings","fixedNodes","disableScrollLock","overflowing","parent","parentElement","scrollContainer","nodeName","push","value","style","overflow","key","el","scrollbarSize","paddingRight","querySelectorAll","restore","i","removeProperty","_ref","setProperty","getHiddenSiblings","hiddenSiblings","getAttribute","ModalManager","modals","containers","add","modal","modalIndex","modalRef","hiddenSiblingNodes","containerIndex","mount","remove","splice","nextTop","isTopModal","default"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,sBAAxB,C,CAAgD;;AAEhD,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,MAAIC,GAAG,GAAGJ,aAAa,CAACG,SAAD,CAAvB;;AAEA,MAAIC,GAAG,CAACC,IAAJ,KAAaF,SAAjB,EAA4B;AAC1B,WAAOF,WAAW,CAACG,GAAD,CAAX,CAAiBE,UAAjB,GAA8BF,GAAG,CAACG,eAAJ,CAAoBC,WAAzD;AACD;;AAED,SAAOL,SAAS,CAACM,YAAV,GAAyBN,SAAS,CAACO,YAA1C;AACD;;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AACrC,MAAIA,IAAJ,EAAU;AACRD,IAAAA,IAAI,CAACE,YAAL,CAAkB,aAAlB,EAAiC,MAAjC;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,CAACG,eAAL,CAAqB,aAArB;AACD;AACF;;AAED,SAASC,eAAT,CAAyBJ,IAAzB,EAA+B;AAC7B,SAAOK,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBP,IAAxB,EAA8B,eAA9B,CAAD,EAAiD,EAAjD,CAAR,IAAgE,CAAvE;AACD;;AAED,SAASQ,kBAAT,CAA4BjB,SAA5B,EAAuCkB,SAAvC,EAAkDC,WAAlD,EAA+D;AAC7D,MAAIC,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAzF;AACA,MAAIX,IAAI,GAAGW,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAjD;AACA,MAAIC,SAAS,GAAG,CAACN,SAAD,EAAYC,WAAZ,EAAyBM,MAAzB,CAAgC9B,kBAAkB,CAACyB,cAAD,CAAlD,CAAhB;AACA,MAAIM,iBAAiB,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,CAAxB;AACA,KAAGC,OAAH,CAAWC,IAAX,CAAgB5B,SAAS,CAAC6B,QAA1B,EAAoC,UAAUpB,IAAV,EAAgB;AAClD,QAAIA,IAAI,CAACqB,QAAL,KAAkB,CAAlB,IAAuBN,SAAS,CAACO,OAAV,CAAkBtB,IAAlB,MAA4B,CAAC,CAApD,IAAyDiB,iBAAiB,CAACK,OAAlB,CAA0BtB,IAAI,CAACuB,OAA/B,MAA4C,CAAC,CAA1G,EAA6G;AAC3GxB,MAAAA,UAAU,CAACC,IAAD,EAAOC,IAAP,CAAV;AACD;AACF,GAJD;AAKD;;AAED,SAASuB,WAAT,CAAqBC,aAArB,EAAoCC,QAApC,EAA8C;AAC5C,MAAIC,GAAG,GAAG,CAAC,CAAX;AACAF,EAAAA,aAAa,CAACG,IAAd,CAAmB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACxC,QAAIJ,QAAQ,CAACG,IAAD,CAAZ,EAAoB;AAClBF,MAAAA,GAAG,GAAGG,KAAN;AACA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAPD;AAQA,SAAOH,GAAP;AACD;;AAED,SAASI,eAAT,CAAyBN,aAAzB,EAAwCO,KAAxC,EAA+C;AAC7C,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAI3C,SAAS,GAAGkC,aAAa,CAAClC,SAA9B;AACA,MAAI4C,UAAJ;;AAEA,MAAI,CAACH,KAAK,CAACI,iBAAX,EAA8B;AAC5B,QAAIC,WAAW,GAAG/C,aAAa,CAACC,SAAD,CAA/B,CAD4B,CACgB;AAC5C;;AAEA,QAAI+C,MAAM,GAAG/C,SAAS,CAACgD,aAAvB;AACA,QAAIC,eAAe,GAAGF,MAAM,CAACG,QAAP,KAAoB,MAApB,IAA8BnC,MAAM,CAACC,gBAAP,CAAwB+B,MAAxB,EAAgC,YAAhC,MAAkD,QAAhF,GAA2FA,MAA3F,GAAoG/C,SAA1H;AACA0C,IAAAA,YAAY,CAACS,IAAb,CAAkB;AAChBC,MAAAA,KAAK,EAAEH,eAAe,CAACI,KAAhB,CAAsBC,QADb;AAEhBC,MAAAA,GAAG,EAAE,UAFW;AAGhBC,MAAAA,EAAE,EAAEP;AAHY,KAAlB,EAN4B,CAUxB;AACJ;;AAEAA,IAAAA,eAAe,CAACI,KAAhB,CAAsBC,QAAtB,GAAiC,QAAjC;;AAEA,QAAIR,WAAJ,EAAiB;AACf,UAAIW,aAAa,GAAG7D,gBAAgB,EAApC;AACA8C,MAAAA,YAAY,CAACS,IAAb,CAAkB;AAChBC,QAAAA,KAAK,EAAEpD,SAAS,CAACqD,KAAV,CAAgBK,YADP;AAEhBH,QAAAA,GAAG,EAAE,eAFW;AAGhBC,QAAAA,EAAE,EAAExD;AAHY,OAAlB,EAFe,CAMX;;AAEJA,MAAAA,SAAS,CAACqD,KAAV,CAAgB,eAAhB,IAAmC,GAAG5B,MAAH,CAAUZ,eAAe,CAACb,SAAD,CAAf,GAA6ByD,aAAvC,EAAsD,IAAtD,CAAnC,CARe,CAQiF;;AAEhGb,MAAAA,UAAU,GAAG/C,aAAa,CAACG,SAAD,CAAb,CAAyB2D,gBAAzB,CAA0C,YAA1C,CAAb;AACA,SAAGhC,OAAH,CAAWC,IAAX,CAAgBgB,UAAhB,EAA4B,UAAUnC,IAAV,EAAgB;AAC1CkC,QAAAA,eAAe,CAACQ,IAAhB,CAAqB1C,IAAI,CAAC4C,KAAL,CAAWK,YAAhC;AACAjD,QAAAA,IAAI,CAAC4C,KAAL,CAAWK,YAAX,GAA0B,GAAGjC,MAAH,CAAUZ,eAAe,CAACJ,IAAD,CAAf,GAAwBgD,aAAlC,EAAiD,IAAjD,CAA1B;AACD,OAHD;AAID;AACF;;AAED,MAAIG,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,QAAIhB,UAAJ,EAAgB;AACd,SAAGjB,OAAH,CAAWC,IAAX,CAAgBgB,UAAhB,EAA4B,UAAUnC,IAAV,EAAgBoD,CAAhB,EAAmB;AAC7C,YAAIlB,eAAe,CAACkB,CAAD,CAAnB,EAAwB;AACtBpD,UAAAA,IAAI,CAAC4C,KAAL,CAAWK,YAAX,GAA0Bf,eAAe,CAACkB,CAAD,CAAzC;AACD,SAFD,MAEO;AACLpD,UAAAA,IAAI,CAAC4C,KAAL,CAAWS,cAAX,CAA0B,eAA1B;AACD;AACF,OAND;AAOD;;AAEDpB,IAAAA,YAAY,CAACf,OAAb,CAAqB,UAAUoC,IAAV,EAAgB;AACnC,UAAIX,KAAK,GAAGW,IAAI,CAACX,KAAjB;AAAA,UACII,EAAE,GAAGO,IAAI,CAACP,EADd;AAAA,UAEID,GAAG,GAAGQ,IAAI,CAACR,GAFf;;AAIA,UAAIH,KAAJ,EAAW;AACTI,QAAAA,EAAE,CAACH,KAAH,CAASW,WAAT,CAAqBT,GAArB,EAA0BH,KAA1B;AACD,OAFD,MAEO;AACLI,QAAAA,EAAE,CAACH,KAAH,CAASS,cAAT,CAAwBP,GAAxB;AACD;AACF,KAVD;AAWD,GAtBD;;AAwBA,SAAOK,OAAP;AACD;;AAED,SAASK,iBAAT,CAA2BjE,SAA3B,EAAsC;AACpC,MAAIkE,cAAc,GAAG,EAArB;AACA,KAAGvC,OAAH,CAAWC,IAAX,CAAgB5B,SAAS,CAAC6B,QAA1B,EAAoC,UAAUpB,IAAV,EAAgB;AAClD,QAAIA,IAAI,CAAC0D,YAAL,IAAqB1D,IAAI,CAAC0D,YAAL,CAAkB,aAAlB,MAAqC,MAA9D,EAAsE;AACpED,MAAAA,cAAc,CAACf,IAAf,CAAoB1C,IAApB;AACD;AACF,GAJD;AAKA,SAAOyD,cAAP;AACD;AACD;;;;;;;;;AASA,IAAIE,YAAY;AAChB;AACA,YAAY;AACV,WAASA,YAAT,GAAwB;AACtB3E,IAAAA,eAAe,CAAC,IAAD,EAAO2E,YAAP,CAAf,CADsB,CAGtB;;;AACA,SAAKC,MAAL,GAAc,EAAd,CAJsB,CAIJ;AAClB;AACA;AACA;AACA;;AAEA,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAED5E,EAAAA,YAAY,CAAC0E,YAAD,EAAe,CAAC;AAC1Bb,IAAAA,GAAG,EAAE,KADqB;AAE1BH,IAAAA,KAAK,EAAE,SAASmB,GAAT,CAAaC,KAAb,EAAoBxE,SAApB,EAA+B;AACpC,UAAIyE,UAAU,GAAG,KAAKJ,MAAL,CAAYtC,OAAZ,CAAoByC,KAApB,CAAjB;;AAEA,UAAIC,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrB,eAAOA,UAAP;AACD;;AAEDA,MAAAA,UAAU,GAAG,KAAKJ,MAAL,CAAY/C,MAAzB;AACA,WAAK+C,MAAL,CAAYlB,IAAZ,CAAiBqB,KAAjB,EARoC,CAQX;;AAEzB,UAAIA,KAAK,CAACE,QAAV,EAAoB;AAClBlE,QAAAA,UAAU,CAACgE,KAAK,CAACE,QAAP,EAAiB,KAAjB,CAAV;AACD;;AAED,UAAIC,kBAAkB,GAAGV,iBAAiB,CAACjE,SAAD,CAA1C;AACAiB,MAAAA,kBAAkB,CAACjB,SAAD,EAAYwE,KAAK,CAACtD,SAAlB,EAA6BsD,KAAK,CAACE,QAAnC,EAA6CC,kBAA7C,EAAiE,IAAjE,CAAlB;AACA,UAAIC,cAAc,GAAG3C,WAAW,CAAC,KAAKqC,UAAN,EAAkB,UAAUhC,IAAV,EAAgB;AAChE,eAAOA,IAAI,CAACtC,SAAL,KAAmBA,SAA1B;AACD,OAF+B,CAAhC;;AAIA,UAAI4E,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzB,aAAKN,UAAL,CAAgBM,cAAhB,EAAgCP,MAAhC,CAAuClB,IAAvC,CAA4CqB,KAA5C;AACA,eAAOC,UAAP;AACD;;AAED,WAAKH,UAAL,CAAgBnB,IAAhB,CAAqB;AACnBkB,QAAAA,MAAM,EAAE,CAACG,KAAD,CADW;AAEnBxE,QAAAA,SAAS,EAAEA,SAFQ;AAGnB4D,QAAAA,OAAO,EAAE,IAHU;AAInBe,QAAAA,kBAAkB,EAAEA;AAJD,OAArB;AAMA,aAAOF,UAAP;AACD;AAlCyB,GAAD,EAmCxB;AACDlB,IAAAA,GAAG,EAAE,OADJ;AAEDH,IAAAA,KAAK,EAAE,SAASyB,KAAT,CAAeL,KAAf,EAAsB/B,KAAtB,EAA6B;AAClC,UAAImC,cAAc,GAAG3C,WAAW,CAAC,KAAKqC,UAAN,EAAkB,UAAUhC,IAAV,EAAgB;AAChE,eAAOA,IAAI,CAAC+B,MAAL,CAAYtC,OAAZ,CAAoByC,KAApB,MAA+B,CAAC,CAAvC;AACD,OAF+B,CAAhC;AAGA,UAAItC,aAAa,GAAG,KAAKoC,UAAL,CAAgBM,cAAhB,CAApB;;AAEA,UAAI,CAAC1C,aAAa,CAAC0B,OAAnB,EAA4B;AAC1B1B,QAAAA,aAAa,CAAC0B,OAAd,GAAwBpB,eAAe,CAACN,aAAD,EAAgBO,KAAhB,CAAvC;AACD;AACF;AAXA,GAnCwB,EA+CxB;AACDc,IAAAA,GAAG,EAAE,QADJ;AAEDH,IAAAA,KAAK,EAAE,SAAS0B,MAAT,CAAgBN,KAAhB,EAAuB;AAC5B,UAAIC,UAAU,GAAG,KAAKJ,MAAL,CAAYtC,OAAZ,CAAoByC,KAApB,CAAjB;;AAEA,UAAIC,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrB,eAAOA,UAAP;AACD;;AAED,UAAIG,cAAc,GAAG3C,WAAW,CAAC,KAAKqC,UAAN,EAAkB,UAAUhC,IAAV,EAAgB;AAChE,eAAOA,IAAI,CAAC+B,MAAL,CAAYtC,OAAZ,CAAoByC,KAApB,MAA+B,CAAC,CAAvC;AACD,OAF+B,CAAhC;AAGA,UAAItC,aAAa,GAAG,KAAKoC,UAAL,CAAgBM,cAAhB,CAApB;AACA1C,MAAAA,aAAa,CAACmC,MAAd,CAAqBU,MAArB,CAA4B7C,aAAa,CAACmC,MAAd,CAAqBtC,OAArB,CAA6ByC,KAA7B,CAA5B,EAAiE,CAAjE;AACA,WAAKH,MAAL,CAAYU,MAAZ,CAAmBN,UAAnB,EAA+B,CAA/B,EAZ4B,CAYO;;AAEnC,UAAIvC,aAAa,CAACmC,MAAd,CAAqB/C,MAArB,KAAgC,CAApC,EAAuC;AACrC;AACA,YAAIY,aAAa,CAAC0B,OAAlB,EAA2B;AACzB1B,UAAAA,aAAa,CAAC0B,OAAd;AACD;;AAED,YAAIY,KAAK,CAACE,QAAV,EAAoB;AAClB;AACAlE,UAAAA,UAAU,CAACgE,KAAK,CAACE,QAAP,EAAiB,IAAjB,CAAV;AACD;;AAEDzD,QAAAA,kBAAkB,CAACiB,aAAa,CAAClC,SAAf,EAA0BwE,KAAK,CAACtD,SAAhC,EAA2CsD,KAAK,CAACE,QAAjD,EAA2DxC,aAAa,CAACyC,kBAAzE,EAA6F,KAA7F,CAAlB;AACA,aAAKL,UAAL,CAAgBS,MAAhB,CAAuBH,cAAvB,EAAuC,CAAvC;AACD,OAbD,MAaO;AACL;AACA,YAAII,OAAO,GAAG9C,aAAa,CAACmC,MAAd,CAAqBnC,aAAa,CAACmC,MAAd,CAAqB/C,MAArB,GAA8B,CAAnD,CAAd,CAFK,CAEgE;AACrE;AACA;;AAEA,YAAI0D,OAAO,CAACN,QAAZ,EAAsB;AACpBlE,UAAAA,UAAU,CAACwE,OAAO,CAACN,QAAT,EAAmB,KAAnB,CAAV;AACD;AACF;;AAED,aAAOD,UAAP;AACD;AAzCA,GA/CwB,EAyFxB;AACDlB,IAAAA,GAAG,EAAE,YADJ;AAEDH,IAAAA,KAAK,EAAE,SAAS6B,UAAT,CAAoBT,KAApB,EAA2B;AAChC,aAAO,KAAKH,MAAL,CAAY/C,MAAZ,GAAqB,CAArB,IAA0B,KAAK+C,MAAL,CAAY,KAAKA,MAAL,CAAY/C,MAAZ,GAAqB,CAAjC,MAAwCkD,KAAzE;AACD;AAJA,GAzFwB,CAAf,CAAZ;;AAgGA,SAAOJ,YAAP;AACD,CA/GD,EAFA;;AAmHA,SAASA,YAAY,IAAIc,OAAzB","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode) {\n  var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (node) {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  var idx = -1;\n  containerInfo.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var restorePaddings = [];\n  var container = containerInfo.container;\n  var fixedNodes;\n\n  if (!props.disableScrollLock) {\n    var overflowing = isOverflowing(container); // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n    var parent = container.parentElement;\n    var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container;\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    }); // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    scrollContainer.style.overflow = 'hidden';\n\n    if (overflowing) {\n      var scrollbarSize = getScrollbarSize();\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, function (node) {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = \"\".concat(getPaddingRight(node) + scrollbarSize, \"px\");\n      });\n    }\n  }\n\n  var restore = function restore() {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, function (node, i) {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          key = _ref.key;\n\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (node) {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager =\n/*#__PURE__*/\nfunction () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    // this.modals[modalIndex] = modal\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblingNodes = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblingNodes: hiddenSiblingNodes\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };"]},"metadata":{},"sourceType":"module"}