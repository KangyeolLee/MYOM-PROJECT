{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  var _root;\n\n  return {\n    /* Styles applied to the root element. */\n    root: (_root = {\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, _defineProperty(_root, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }), _defineProperty(_root, theme.breakpoints.up('md'), {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }), _root),\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"fixed\", \"maxWidth\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/node_modules/@material-ui/core/esm/Container/Container.js"],"names":["_extends","_objectWithoutProperties","_defineProperty","React","PropTypes","clsx","withStyles","capitalize","styles","theme","_root","root","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","fixed","Object","keys","values","reduce","acc","breakpoint","value","maxWidth","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","Container","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$fixed","_props$maxWidth","other","createElement","concat","String","process","env","NODE_ENV","propTypes","children","node","isRequired","object","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  var _root;\n\n  return {\n    /* Styles applied to the root element. */\n    root: (_root = {\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, _defineProperty(_root, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }), _defineProperty(_root, theme.breakpoints.up('md'), {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }), _root),\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"fixed\", \"maxWidth\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"]},"metadata":{},"sourceType":"module"}