{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/chatting/ChattingLists.js\";\nimport React from 'react';\nimport Swiper from 'react-id-swiper';\nimport moment from 'moment';\nimport 'moment/locale/ko';\n\nconst ChattingLists = props => {\n  const params = {\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    },\n    spaceBetween: 30 // loop: true,\n\n  };\n  const chats = props.chats,\n        profileImgs = props.profileImgs,\n        profile = props.profile,\n        _select_Room = props._select_Room;\n  const orderedChats = chats.length ? chats.slice() : null;\n  orderedChats.sort((a, b) => b.updatedAt.seconds - a.updatedAt.seconds);\n  return React.createElement(Swiper, Object.assign({}, params, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"collection with-header top-chattingList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header center purple lighten-5 scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\\uBB38\\uC758\"), orderedChats.filter(category => category.deal !== true).length ? orderedChats.filter(category => category.deal !== true).map((chat, index) => {\n    const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n    return chat.lastMessageSender === profile.initials || chat.isChecked ? React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readTrue\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message ? chat.messages[chat.messages.length - 1].message : '파일을 보냈습니다.')) : React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readFalse\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message ? chat.messages[chat.messages.length - 1].message : '파일을 보냈습니다.'));\n  }) : React.createElement(\"div\", {\n    className: \"no-messages scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\uC544\\uC9C1 \\uBB38\\uC758 \\uC628 \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")), React.createElement(\"ul\", {\n    className: \"collection with-header top-chattingList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header center blue lighten-5 scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\uAD6C\\uB9E4\"), orderedChats.filter(category => category.deal === true).length ? orderedChats.filter(category => category.deal === true).map(chat => {\n    const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n    return chat.lastMessageSender === profile.initials || chat.isChecked ? React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readTrue\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message)) : React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readFalse\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message));\n  }) : React.createElement(\"div\", {\n    className: \"no-messages scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\uC544\\uC9C1 \\uAD6C\\uB9E4\\uAC00 \\uC131\\uC0AC\\uB41C \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")), React.createElement(\"ul\", {\n    className: \"collection with-header top-chattingList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header center teal lighten-5 scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\uC644\\uB8CC\"), orderedChats.filter(category => category.dealCompleted === true).length ? orderedChats.filter(category => category.dealCompleted === true).map(chat => {\n    const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n    return chat.lastMessageSender === profile.initials || chat.isChecked ? React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readTrue\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message)) : React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readFalse\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message));\n  }) : React.createElement(\"div\", {\n    className: \"no-messages scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"\\uC544\\uC9C1 \\uAC70\\uB798\\uAC00 \\uC644\\uB8CC\\uB41C \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")), React.createElement(\"ul\", {\n    className: \"collection with-header top-chattingList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header center red lighten-5 scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\\uC804\\uCCB4\"), orderedChats.length ? orderedChats.map(chat => {\n    const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n    return chat.lastMessageSender === profile.initials || chat.isChecked ? React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readTrue\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message)) : React.createElement(\"li\", {\n      id: chat.id,\n      key: chat.id,\n      className: \"collection-item avatar chattingList readFalse\",\n      onClick: e => _select_Room(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, profileImgs[partnerNickname] ? React.createElement(\"img\", {\n      src: profileImgs[partnerNickname],\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: \"/img/defaults/userProfile.jpeg\",\n      alt: \"\\uC0C1\\uB300\\uBC29 \\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n      className: \"circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"title scorelt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, chat.users_nickName.filter(nickname => nickname !== profile.initials)), React.createElement(\"span\", {\n      className: \"right timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n      sameDay: 'LT',\n      lastDay: '어제',\n      lastWeek: 'YYYY-MM-DD'\n    })), React.createElement(\"p\", {\n      className: \"text-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, chat.messages[chat.messages.length - 1].message));\n  }) : React.createElement(\"div\", {\n    className: \"no-messages scorelt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\uC544\\uC9C1 \\uBC1B\\uC740 \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n};\n\nexport default ChattingLists;","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/chatting/ChattingLists.js"],"names":["React","Swiper","moment","ChattingLists","props","params","navigation","nextEl","prevEl","spaceBetween","chats","profileImgs","profile","_select_Room","orderedChats","length","slice","sort","a","b","updatedAt","seconds","filter","category","deal","map","chat","index","partnerNickname","users_nickName","nickname","initials","join","lastMessageSender","isChecked","id","e","messages","sendAt","toDate","calendar","sameDay","lastDay","lastWeek","message","dealCompleted"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Swiper from 'react-id-swiper';\nimport moment from 'moment';\nimport 'moment/locale/ko';\n\nconst ChattingLists = (props) => {\n  const params = {\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    },\n    spaceBetween: 30,\n    // loop: true,\n  }\n  \n  const { chats, profileImgs, profile, _select_Room } = props;\n  const orderedChats = chats.length ? chats.slice() : null;\n  orderedChats.sort((a,b) => b.updatedAt.seconds - a.updatedAt.seconds);\n\n  return (\n    <Swiper {...params}>\n\n      <ul className=\"collection with-header top-chattingList\">\n        <li className=\"collection-header center purple lighten-5 scorelt\">문의</li>\n        {\n          (orderedChats.filter(category => category.deal !== true).length)\n            ? (orderedChats.filter(category => category.deal !== true).map((chat, index) => {\n                const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n                return (chat.lastMessageSender === profile.initials || chat.isChecked)\n                  ? (\n                    <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readTrue\" onClick={(e) => _select_Room(e)}>\n                      {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"상대방 프로필 이미지\" className=\"circle\"/> */}\n                      {\n                        (profileImgs[partnerNickname])\n                          ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                          : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                      } \n                      <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                      <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                        sameDay: 'LT',\n                        lastDay: '어제',\n                        lastWeek: 'YYYY-MM-DD'})}</span>\n                      <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message ? chat.messages[chat.messages.length - 1].message : '파일을 보냈습니다.'}</p>\n                    </li>\n                  )\n                  : (\n                    <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readFalse\" onClick={(e) => _select_Room(e)}>\n                      {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"상대방 프로필 이미지\" className=\"circle\"/>        */}\n                      {\n                        (profileImgs[partnerNickname])\n                          ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                          : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                      } \n                      <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                      <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                        sameDay: 'LT',\n                        lastDay: '어제',\n                        lastWeek: 'YYYY-MM-DD'})}</span>\n                      <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message ? chat.messages[chat.messages.length - 1].message : '파일을 보냈습니다.'}</p>\n                    </li>\n                  )\n                }))\n          : <div className='no-messages scorelt'>아직 문의 온 메시지가 없습니다.</div>\n        }\n      </ul>\n\n      <ul className=\"collection with-header top-chattingList\">\n        <li className=\"collection-header center blue lighten-5 scorelt\">구매</li>\n        {\n          (orderedChats.filter(category => category.deal === true).length)\n            ? (orderedChats.filter(category => category.deal === true).map(chat => {\n              const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n              return (chat.lastMessageSender === profile.initials || chat.isChecked)\n                ? (\n                  <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readTrue\" onClick={(e) => _select_Room(e)}>\n                    {\n                      (profileImgs[partnerNickname])\n                        ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                        : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                    }      \n                    <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                    <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                      sameDay: 'LT',\n                      lastDay: '어제',\n                      lastWeek: 'YYYY-MM-DD'})}</span>\n                    <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message}</p>\n                  </li>\n                )\n                : (\n                  <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readFalse\" onClick={(e) => _select_Room(e)}>\n                    {/* <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/> */}\n                    {\n                      (profileImgs[partnerNickname])\n                        ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                        : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                    } \n                    <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                    <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                      sameDay: 'LT',\n                      lastDay: '어제',\n                      lastWeek: 'YYYY-MM-DD'})}</span>\n                    <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message}</p>\n                  </li>\n                )\n              }))\n            : <div className='no-messages scorelt'>아직 구매가 성사된 메시지가 없습니다.</div>\n        }\n      </ul>\n\n      <ul className=\"collection with-header top-chattingList\">\n        <li className=\"collection-header center teal lighten-5 scorelt\">완료</li>\n        {\n          (orderedChats.filter(category => category.dealCompleted === true).length)\n            ? (orderedChats.filter(category => category.dealCompleted === true).map(chat => {\n              const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n              return (chat.lastMessageSender === profile.initials || chat.isChecked)\n                ? (\n                  <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readTrue\" onClick={(e) => _select_Room(e)}>\n                    {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"상대방 프로필 이미지\" className=\"circle\"/>        */}\n                    {\n                      (profileImgs[partnerNickname])\n                        ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                        : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                    }  \n                    <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                    <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                      sameDay: 'LT',\n                      lastDay: '어제',\n                      lastWeek: 'YYYY-MM-DD'})}</span>\n                    <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message}</p>\n                  </li>\n                )\n                : (\n                  <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readFalse\" onClick={(e) => _select_Room(e)}>\n                    {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"상대방 프로필 이미지\" className=\"circle\"/>        */}\n                    {\n                      (profileImgs[partnerNickname])\n                        ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                        : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                    }  \n                    <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                    <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                      sameDay: 'LT',\n                      lastDay: '어제',\n                      lastWeek: 'YYYY-MM-DD'})}</span>\n                    <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message}</p>\n                  </li>\n                )\n              }))\n            : <div className='no-messages scorelt'>아직 거래가 완료된 메시지가 없습니다.</div>\n        }\n      </ul>\n\n      <ul className=\"collection with-header top-chattingList\">\n        <li className=\"collection-header center red lighten-5 scorelt\">전체</li>\n        {\n          (orderedChats.length)\n            ? (orderedChats.map(chat => {\n              const partnerNickname = chat.users_nickName.filter(nickname => nickname !== profile.initials).join();\n              return (chat.lastMessageSender === profile.initials || chat.isChecked)\n                ? (\n                  <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readTrue\" onClick={(e) => _select_Room(e)}>\n                    {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"상대방 프로필 이미지\" className=\"circle\"/>        */}\n                    {\n                      (profileImgs[partnerNickname])\n                        ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                        : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                    }  \n                    <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                    <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                      sameDay: 'LT',\n                      lastDay: '어제',\n                      lastWeek: 'YYYY-MM-DD'})}</span>\n                    <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message}</p>\n                  </li>\n                )\n                : (\n                  <li id={chat.id} key={chat.id} className=\"collection-item avatar chattingList readFalse\" onClick={(e) => _select_Room(e)}>\n                    {/* <img src=\"/img/defaults/userProfile.jpeg\" alt=\"상대방 프로필 이미지\" className=\"circle\"/>        */}\n                    {\n                      (profileImgs[partnerNickname])\n                        ? <img src={profileImgs[partnerNickname]} alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                        : <img src='/img/defaults/userProfile.jpeg' alt=\"상대방 프로필 이미지\" className=\"circle\"/>\n                    }  \n                    <span className=\"title scorelt\">{chat.users_nickName.filter(nickname => nickname !== profile.initials)}</span>\n                    <span className=\"right timestamp\">{moment(chat.messages[chat.messages.length - 1].sendAt.toDate()).calendar(null, {\n                      sameDay: 'LT',\n                      lastDay: '어제',\n                      lastWeek: 'YYYY-MM-DD'})}</span>\n                    <p className=\"text-preview\">{chat.messages[chat.messages.length - 1].message}</p>\n                  </li>\n                )\n              }))\n            : <div className='no-messages scorelt'>아직 받은 메시지가 없습니다.</div>\n        }\n      </ul>\n\n      {/* <ul className=\"collection with-header top-chattingList\">\n        <li className=\"collection-header center red lighten-5 scorelt\">전체</li>\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>프로여행러</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>나랏말싸미 듕귁에 달아 어쩌구 저쩌구 이렇게 저렇게 동해물과 백두산이 마르고 닳도록 하나님이 보우하사 우리 나라 만세!</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>테스트계정</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents textContents textContents textContents textContents textContents textContents textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>선릉컴퍼니</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>나는동용</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>나는서희</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>테스트계정</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>선릉컴퍼니</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>나는동용</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>나는서희</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>테스트계정</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>선릉컴퍼니</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>나는동용</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>나는서희</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n      </ul> \n \n      <ul className=\"collection with-header\">\n        <li className=\"collection-header center purple lighten-5 scorelt\">문의</li>\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>여행비둘기</span>\n          <span className=\"right timestamp\">5분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>선릉컴퍼니</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n      </ul>\n\n      <ul className=\"collection with-header\">\n        <li className=\"collection-header center blue lighten-5 scorelt\">거래</li>\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>테스트계정</span>\n          <span className=\"right timestamp\">10분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>선릉컴퍼니</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n      </ul>\n\n      <ul className=\"collection with-header\">\n        <li className=\"collection-header center teal lighten-5 scorelt\">완료</li>\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>여행에미치다</span>\n          <span className=\"right timestamp\">1일전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n\n        <li className=\"collection-item avatar\">\n          <img src=\"/img/defaults/userProfile.jpeg\" alt=\"유저 프로필 이미지\" className='circle' />\n          <span className='title scorelt'>선릉컴퍼니</span>\n          <span className=\"right timestamp\">1분전</span>\n          <p className='text-preview'>user textContents</p>\n        </li>\n      </ul> */}\n    </Swiper>\n  )\n}\n\nexport default ChattingLists;"]},"metadata":{},"sourceType":"module"}