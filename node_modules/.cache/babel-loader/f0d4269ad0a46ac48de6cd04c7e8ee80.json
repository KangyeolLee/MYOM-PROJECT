{"ast":null,"code":"import _objectSpread from \"/Users/JeHongHwang/Desktop/leekang/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { _initJoin_login } from '../actions/chatAction';\nconst initState = {\n  authError: null,\n  nickNameError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log(action.err);\n      return _objectSpread({}, state, {\n        authError: 'Login Failed'\n      });\n\n    case 'NO_REGISTER_EMAIL_ERROR':\n      console.log(action.err);\n      return _objectSpread({}, state, {\n        authError: '입력하신 이메일과 일치한 로그인 정보가 없습니다.'\n      });\n\n    case 'WRONG_PASSWORD_ERROR':\n      console.log(action.err);\n      return _objectSpread({}, state, {\n        authError: '이메일/패스워드를 확인해주세요.'\n      });\n\n    case 'LOGIN_SUCCESS':\n      console.log('log in success');\n\n      _initJoin_login();\n\n      return _objectSpread({}, state, {\n        authError: null\n      });\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return _objectSpread({}, state, {\n        authError: null,\n        nickNameError: null\n      });\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error', action.err.message);\n      return _objectSpread({}, state, {\n        authError: action.err.message\n      });\n\n    case 'SIGNUP_NICKNAME_ERROR':\n      console.log('nickname duplicated');\n      return _objectSpread({}, state, {\n        nickNameError: '이미 사용하고 있는 닉네임입니다.'\n      });\n\n    case 'DELETE_SUCCESS':\n      alert('회원탈퇴에 성공하였습니다!');\n      return state;\n\n    case 'DELETE_ERROR':\n      console.log('withdrawal failed');\n      return state;\n\n    case 'DELETE_RECENT_LOGIN_ERROR':\n      alert('재로그인 후 시도해주세요!');\n      return state;\n\n    case 'PWDUPDATE_SUCCESS':\n      alert('비밀번호가 변경되었습니다.');\n      return state;\n\n    case 'PWDUPDATE_ERROR':\n      console.log('pwd update failed');\n      return state;\n\n    case 'REAUTHENTICATE_ERROR':\n      alert('기존의 비밀번호를 다시 입력해주세요.');\n      return state;\n\n    case 'SENDRESETEMAIL_SUCCESS':\n      alert('비밀번호 재설정 이메일을 발송해드렸습니다.');\n      return state;\n\n    case 'SENDRESETEMAIL_ERROR':\n      alert('입력하신 이메일로 가입된 정보가 없습니다.');\n      return state;\n\n    case 'EMAILUSED_ERROR':\n      alert('이미 가입된 이메일입니다.');\n      return state;\n\n    case 'EMAILINVALID_ERROR':\n      alert('이미 가입됐으나 인증이 안된 이메일입니다. 이메일 인증을 해주세요.');\n      return state;\n\n    case 'OPERATION_ERROR':\n      alert('회원가입 중 오류가 발생했습니다. 새로고침하고 다시 시도해주세요.');\n      return state;\n\n    case 'WEAKPWD_ERROR':\n      alert('비밀번호가 보안에 취약합니다. 다시 설정해주세요.');\n      return state;\n\n    case 'SENDEMAILVERIFICATION_SUCCESS':\n      alert('가입하신 이메일로 인증메일 발송되었습니다.');\n      return state;\n\n    case 'SENDEMAILVERIFICATION_ERROR':\n      console.log('send verification email failed');\n      return state;\n\n    case 'PROFILEIMGREGISTER_SUCCESS':\n      console.log('img register success');\n      return state;\n\n    case 'PROFILEIMGREGISTER_ERROR':\n      alert('변경할 프로필 이미지를 등록해주세요.');\n      return state;\n\n    case 'EMAIL_FIND_SUCCESS':\n      console.log('email find success');\n      return state;\n\n    case 'EMAIL_FIND_ERROR':\n      console.log('email find error');\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/store/reducers/authReducer.js"],"names":["_initJoin_login","initState","authError","nickNameError","authReducer","state","action","type","console","log","err","message","alert"],"mappings":"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","sourcesContent":["import { _initJoin_login } from '../actions/chatAction';\n\nconst initState = {\n  authError: null,\n  nickNameError: null,\n}\n\nconst authReducer = (state=initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n      console.log(action.err);\n      return {...state, authError: 'Login Failed'}\n\n    case 'NO_REGISTER_EMAIL_ERROR':\n      console.log(action.err);\n      return {...state, authError: '입력하신 이메일과 일치한 로그인 정보가 없습니다.'}\n    \n    case 'WRONG_PASSWORD_ERROR' :\n      console.log(action.err);\n      return {...state, authError: '이메일/패스워드를 확인해주세요.'}\n    \n    case 'LOGIN_SUCCESS':\n      console.log('log in success');\n      _initJoin_login();\n      return {...state, authError: null}\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {...state, authError: null, nickNameError: null }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error', action.err.message);\n      return {...state, authError: action.err.message}\n\n    case 'SIGNUP_NICKNAME_ERROR':\n      console.log('nickname duplicated');\n      return{...state, nickNameError: '이미 사용하고 있는 닉네임입니다.'}\n\n    case 'DELETE_SUCCESS':\n      alert('회원탈퇴에 성공하였습니다!');\n      return state;\n       \n    case 'DELETE_ERROR':\n      console.log('withdrawal failed')\n      return state;\n    \n    case 'DELETE_RECENT_LOGIN_ERROR':\n      alert('재로그인 후 시도해주세요!');\n      return state;\n    \n    case 'PWDUPDATE_SUCCESS':\n      alert('비밀번호가 변경되었습니다.');\n      return state;\n    \n    case 'PWDUPDATE_ERROR':\n      console.log('pwd update failed');\n      return state;\n    \n    case 'REAUTHENTICATE_ERROR':\n      alert('기존의 비밀번호를 다시 입력해주세요.');\n      return state; \n    \n    case 'SENDRESETEMAIL_SUCCESS':\n      alert('비밀번호 재설정 이메일을 발송해드렸습니다.');\n      return state;\n\n    case 'SENDRESETEMAIL_ERROR':\n      alert('입력하신 이메일로 가입된 정보가 없습니다.');\n      return state;\n    \n    case 'EMAILUSED_ERROR':\n      alert('이미 가입된 이메일입니다.');\n      return state;\n    \n    case 'EMAILINVALID_ERROR':\n      alert('이미 가입됐으나 인증이 안된 이메일입니다. 이메일 인증을 해주세요.');\n      return state;\n    \n    case 'OPERATION_ERROR':\n      alert('회원가입 중 오류가 발생했습니다. 새로고침하고 다시 시도해주세요.');\n      return state;\n    \n    case 'WEAKPWD_ERROR':\n      alert('비밀번호가 보안에 취약합니다. 다시 설정해주세요.');\n      return state;\n\n    case 'SENDEMAILVERIFICATION_SUCCESS':\n      alert('가입하신 이메일로 인증메일 발송되었습니다.');\n      return state;\n    \n    case 'SENDEMAILVERIFICATION_ERROR':\n      console.log('send verification email failed');\n      return state;\n    \n    case 'PROFILEIMGREGISTER_SUCCESS':\n      console.log('img register success');\n      return state;\n    \n    case 'PROFILEIMGREGISTER_ERROR':\n      alert('변경할 프로필 이미지를 등록해주세요.')\n      return state;\n    \n    case 'EMAIL_FIND_SUCCESS':\n      console.log('email find success');\n      return state;\n    \n    case 'EMAIL_FIND_ERROR':\n      console.log('email find error');\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}