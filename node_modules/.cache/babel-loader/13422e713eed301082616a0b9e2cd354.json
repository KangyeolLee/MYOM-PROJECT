{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"disabled\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref,\n    disabled: disabled\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","refType","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","fade","IndeterminateCheckBoxIcon","capitalize","withStyles","styles","theme","root","color","palette","text","secondary","checked","disabled","indeterminate","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","defaultCheckedIcon","createElement","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$disabled","_props$icon","icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","type","concat","process","env","NODE_ENV","propTypes","bool","node","object","isRequired","oneOf","disableRipple","id","string","inputRef","onChange","func","required","value","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"disabled\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref,\n    disabled: disabled\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"]},"metadata":{},"sourceType":"module"}