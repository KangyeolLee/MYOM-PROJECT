{"ast":null,"code":"import { firestore } from \"firebase\";\nexport const sendRequest = (requestData, history, purchased_id) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const senderProfile = getState().firebase.profile;\n    const user = getState().firebase.auth;\n    const firestore = getFirestore();\n    firestore.collection('purchaseList').doc(purchased_id).update({\n      requestData,\n      orderer_nickName: senderProfile.initials,\n      orderer_email: senderProfile.email //구매자 uid 판매자 uid 이메일 닉네임 purchased_id : match.params\n\n    }).then(() => {\n      dispatch({\n        type: 'SEND_REQUEST_SUCCESS'\n      });\n      history.push('/purchaseDetails/' + purchased_id);\n    }).catch(err => {\n      dispatch({\n        type: 'SEND_REQUEST_ERROR'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/store/actions/requestFormAction.js"],"names":["firestore","sendRequest","requestData","history","purchased_id","dispatch","getState","getFirestore","senderProfile","firebase","profile","user","auth","collection","doc","update","orderer_nickName","initials","orderer_email","email","then","type","push","catch","err"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,WAAD,EAAcC,OAAd,EAAuBC,YAAvB,KAAwC;AAClE,SAAM,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAC/C,UAAMC,aAAa,GAAGF,QAAQ,GAAGG,QAAX,CAAoBC,OAA1C;AACA,UAAMC,IAAI,GAAGL,QAAQ,GAAGG,QAAX,CAAoBG,IAAjC;AACA,UAAMZ,SAAS,GAAGO,YAAY,EAA9B;AACAP,IAAAA,SAAS,CAACa,UAAV,CAAqB,cAArB,EAAqCC,GAArC,CAAyCV,YAAzC,EAAuDW,MAAvD,CAA8D;AAC7Db,MAAAA,WAD6D;AAE7Dc,MAAAA,gBAAgB,EAAER,aAAa,CAACS,QAF6B;AAG7DC,MAAAA,aAAa,EAAGV,aAAa,CAACW,KAH+B,CAI7D;;AAJ6D,KAA9D,EAMCC,IAND,CAMM,MAAI;AACTf,MAAAA,QAAQ,CAAC;AAACgB,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACAlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,sBAAsBlB,YAAnC;AACA,KATD,EAUCmB,KAVD,CAUQC,GAAD,IAAS;AACfnB,MAAAA,QAAQ,CAAC;AAACgB,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACA,KAZD;AAaA,GAjBD;AAkBA,CAnBM","sourcesContent":["import { firestore } from \"firebase\";\n\nexport const sendRequest = (requestData, history, purchased_id) => {\n\treturn(dispatch, getState, { getFirestore }) => {\n\t\tconst senderProfile = getState().firebase.profile;\n\t\tconst user = getState().firebase.auth;\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('purchaseList').doc(purchased_id).update({\n\t\t\trequestData,\n\t\t\torderer_nickName: senderProfile.initials,\n\t\t\torderer_email : senderProfile.email,\n\t\t\t//구매자 uid 판매자 uid 이메일 닉네임 purchased_id : match.params\n\t\t})\n\t\t.then(()=>{\n\t\t\tdispatch({type: 'SEND_REQUEST_SUCCESS'});\n\t\t\thistory.push('/purchaseDetails/' + purchased_id);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch({type: 'SEND_REQUEST_ERROR'})\n\t\t})\n\t}\n}"]},"metadata":{},"sourceType":"module"}