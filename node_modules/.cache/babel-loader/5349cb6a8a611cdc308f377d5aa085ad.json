{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport thunk from 'redux-thunk';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\nimport rootReducer from './store/reducers/rootReducer';\nimport AppContainer from './AppContainer';\nimport { BrowserRouter } from 'react-router-dom'; // import { createFirestoreInstance, getFirestore, reduxFirestore, firestoreReducer } from 'redux-firestore';\n// import { ReactReduxFirebaseProvider, firebaseReducer } from 'react-redux-firebase';\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// const store= createStore(rootReducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n//     reduxFirestore(fbConfig),\n//     reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\n//   )\n// );\n\nconst rrfConfig = {\n  userProfile: 'users',\n  attachAuthIsReady: true,\n  useFirestoreForProfile: true\n};\nconst middleware = [thunk.withExtraArgument({\n  getFirestore\n})]; // const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n//   firestore: firestoreReducer\n// })\n\nconst store = createStore(rootReducer, compose(applyMiddleware(...middleware), reduxFirestore(fbConfig)));\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(AppContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","firebase","thunk","createStore","compose","applyMiddleware","ReactReduxFirebaseProvider","createFirestoreInstance","getFirestore","reduxFirestore","fbConfig","rootReducer","AppContainer","BrowserRouter","rrfConfig","userProfile","attachAuthIsReady","useFirestoreForProfile","middleware","withExtraArgument","store","rrfProps","config","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,0BAAT,QAA2C,sBAA3C;AACA,SAASC,uBAAT,EAAkCC,YAAlC,EAAgDC,cAAhD,QAAuE,iBAAvE;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhBC,EAAAA,iBAAiB,EAAE,IAFH;AAGhBC,EAAAA,sBAAsB,EAAE;AAHR,CAAlB;AAMA,MAAMC,UAAU,GAAG,CACjBhB,KAAK,CAACiB,iBAAN,CAAwB;AAAEX,EAAAA;AAAF,CAAxB,CADiB,CAAnB,C,CAIA;AACA;AACA;AACA;;AAEA,MAAMY,KAAK,GAAGjB,WAAW,CAACQ,WAAD,EACvBP,OAAO,CACLC,eAAe,CAAC,GAAGa,UAAJ,CADV,EAELT,cAAc,CAACC,QAAD,CAFT,CADgB,CAAzB;AAMA,MAAMW,QAAQ,GAAG;AACfpB,EAAAA,QADe;AAEfqB,EAAAA,MAAM,EAAER,SAFO;AAGfS,EAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHD;AAIfhB,EAAAA;AAJe,CAAjB;AAOAV,QAAQ,CAAC2B,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACZ,oBAAC,0BAAD,oBAAgCC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAe,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAf,CADF,CADY,CAAhB,EAIeI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJf,E,CAMA;AACA;AACA;;AACA3B,aAAa,CAAC4B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport thunk from 'redux-thunk';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance, getFirestore, reduxFirestore  } from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\nimport rootReducer from './store/reducers/rootReducer';\nimport AppContainer from './AppContainer';\nimport { BrowserRouter } from 'react-router-dom'\n\n// import { createFirestoreInstance, getFirestore, reduxFirestore, firestoreReducer } from 'redux-firestore';\n// import { ReactReduxFirebaseProvider, firebaseReducer } from 'react-redux-firebase';\n// import firebase from 'firebase/app';\n\n// import 'firebase/firestore';\n// import 'firebase/auth';\n\n// const store= createStore(rootReducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n//     reduxFirestore(fbConfig),\n//     reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\n//   )\n// );\n\nconst rrfConfig = {\n  userProfile: 'users',\n  attachAuthIsReady: true,\n  useFirestoreForProfile: true\n}\n\nconst middleware = [\n  thunk.withExtraArgument({ getFirestore }),\n]\n\n// const rootReducer = combineReducers({\n//   firebase: firebaseReducer,\n//   firestore: firestoreReducer\n// })\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n    reduxFirestore(fbConfig)\n  ));\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(<Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <BrowserRouter><AppContainer /></BrowserRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}