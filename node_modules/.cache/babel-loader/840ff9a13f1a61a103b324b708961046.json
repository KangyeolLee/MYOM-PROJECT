{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/community/PostDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './community.css';\nimport { EditorState, convertFromRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport draftToMarkdown from 'draftjs-to-markdown';\nimport PostCommentTest from './PostCommentTest';\nimport CommentRegister from './CommentRegister';\nimport Preloader from '../functionalComponents/Preloader';\nimport { postDelete } from '../../store/actions/postAction';\n\nclass PostDetails extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.postDelete(this.props.match.params.id, this.props.history);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          post = _this$props.post,\n          auth = _this$props.auth; //auth.email\n\n    const post_id = this.props.match.params.id;\n\n    if (post) {\n      const contentState = convertFromRaw(this.props.post.content);\n      const editorState = EditorState.createWithContent(contentState);\n      return React.createElement(\"div\", {\n        className: \"container section post-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: post.post_img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, post.title)), React.createElement(Editor, {\n        editorState: editorState,\n        toolbarHidden: true,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-action grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Posted by \", post.author), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, moment(post.createAt.toDate()).calendar()))), React.createElement(\"div\", {\n        className: \"postComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(PostCommentTest, {\n        post_id: post_id,\n        comment: post.comments.length > 0 ? post.comments.map(item => item) : post.comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(CommentRegister, {\n        postID: this.props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))), auth.uid === post.authorId &&\n      /* 작성자에게만 수정/삭제 버튼이 생성됨. */\n      React.createElement(\"div\", {\n        className: \"revise-delete right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn myomColor-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\")))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\uAC8C\\uC2DC\\uAE00 \\uB85C\\uB529\\uC911...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postDelete: (docID, history) => dispatch(postDelete(docID, history))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => {\n  return [{\n    collection: 'posts',\n    doc: props.match.params.id\n  }];\n}))(PostDetails);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/community/PostDetails.js"],"names":["React","Component","connect","firestoreConnect","compose","Link","moment","EditorState","convertFromRaw","Editor","draftToHtml","draftToMarkdown","PostCommentTest","CommentRegister","Preloader","postDelete","PostDetails","handleSubmit","e","preventDefault","props","match","params","id","history","render","post","auth","post_id","contentState","content","editorState","createWithContent","post_img","title","author","createAt","toDate","calendar","comments","length","map","item","uid","authorId","mapStateToProps","state","ownProps","posts","firestore","data","firebase","mapDispatchToProps","dispatch","docID","collection","doc"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,iBAAP;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA2C,UAA3C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,MAAMC,WAAN,SAA0Bf,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACnCgB,YADmC,GACnBC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkD,KAAKH,KAAL,CAAWI,OAA7D;AACA,KAJkC;AAAA;;AAKnCC,EAAAA,MAAM,GAAE;AAAA,wBACgB,KAAKL,KADrB;AAAA,UACCM,IADD,eACCA,IADD;AAAA,UACOC,IADP,eACOA,IADP,EAEP;;AACA,UAAMC,OAAO,GAAG,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;;AACA,QAAGG,IAAH,EAAS;AACR,YAAMG,YAAY,GAAGrB,cAAc,CAAC,KAAKY,KAAL,CAAWM,IAAX,CAAgBI,OAAjB,CAAnC;AACA,YAAMC,WAAW,GAAGxB,WAAW,CAACyB,iBAAZ,CAA8BH,YAA9B,CAApB;AACA,aACC;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,GAAG,EAAEH,IAAI,CAACO,QAAf;AAAyB,QAAA,GAAG,EAAC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,EAIC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,IAAI,CAACQ,KAAV,CAA7B,CADD,EAEC,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAGH,WAAtB;AAAmC,QAAA,aAAa,MAAhD;AAAiD,QAAA,QAAQ,EAAE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CAJD,EAQC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBL,IAAI,CAACS,MAArB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM7B,MAAM,CAACoB,IAAI,CAACU,QAAL,CAAcC,MAAd,EAAD,CAAN,CAA+BC,QAA/B,EAAN,CAFD,CARD,CADD,EAcC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAIV,OAA5B;AAAqC,QAAA,OAAO,EAAIF,IAAI,CAACa,QAAL,CAAcC,MAAd,GAAuB,CAAvB,GAA2Bd,IAAI,CAACa,QAAL,CAAcE,GAAd,CAAmBC,IAAD,IAAUA,IAA5B,CAA3B,GAA+DhB,IAAI,CAACa,QAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAI,KAAKnB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD,CAdD,EAoBII,IAAI,CAACgB,GAAL,KAAajB,IAAI,CAACkB,QAAnB;AAAgC;AACjC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWC;AAAM,QAAA,QAAQ,EAAI,KAAK3B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,CADD,CAXD,CArBF,CADD;AA0CA,KA7CD,MA6CM;AACL,aACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADD,CADD;AAKA;AACD;;AA7DkC;;AAgEpC,MAAM4B,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,QAAMxB,EAAE,GAAGwB,QAAQ,CAAC1B,KAAT,CAAeC,MAAf,CAAsBC,EAAjC;AACA,QAAMyB,KAAK,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,KAAnC;AACA,QAAMtB,IAAI,GAAGsB,KAAK,GAAEA,KAAK,CAACzB,EAAD,CAAP,GAAc,IAAhC;AACA,SAAO;AACNG,IAAAA,IAAI,EAAEA,IADA;AAENC,IAAAA,IAAI,EAAEmB,KAAK,CAACK,QAAN,CAAexB;AAFf,GAAP;AAIA,CARD;;AAUA,MAAMyB,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAM;AACLtC,IAAAA,UAAU,EAAE,CAACuC,KAAD,EAAQ9B,OAAR,KAAoB6B,QAAQ,CAACtC,UAAU,CAACuC,KAAD,EAAQ9B,OAAR,CAAX;AADnC,GAAN;AAGA,CAJD;;AAMA,eAAepB,OAAO,CACrBF,OAAO,CAAC2C,eAAD,EAAkBO,kBAAlB,CADc,EAEpBjD,gBAAgB,CAAEiB,KAAD,IAAW;AAC3B,SAAO,CACN;AAAEmC,IAAAA,UAAU,EAAE,OAAd;AAAuBC,IAAAA,GAAG,EAAEpC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC;AAA/C,GADM,CAAP;AAGA,CAJe,CAFI,CAAP,CAObP,WAPa,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport './community.css'\nimport { EditorState, convertFromRaw} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html';\nimport draftToMarkdown from 'draftjs-to-markdown';\nimport PostCommentTest from './PostCommentTest'\nimport CommentRegister from './CommentRegister'\nimport Preloader from '../functionalComponents/Preloader';\nimport { postDelete } from '../../store/actions/postAction'\n\nclass PostDetails extends Component {\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.postDelete(this.props.match.params.id, this.props.history);\n\t}\n\trender(){\n\t\tconst { post, auth } = this.props;\n\t\t//auth.email\n\t\tconst post_id = this.props.match.params.id;\n\t\tif(post) {\n\t\t\tconst contentState = convertFromRaw(this.props.post.content);\n\t\t\tconst editorState = EditorState.createWithContent(contentState);\n\t\t\treturn(\n\t\t\t\t<div className=\"container section post-details\">\n\t\t\t\t\t<div className=\"card z-depth-0\">\n\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t<img src={post.post_img} alt=\"\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t<span className=\"card-title\"><h3>{post.title}</h3></span>\n\t\t\t\t\t\t\t<Editor editorState= {editorState} toolbarHidden readOnly={true}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card-action grey-text\">\n\t\t\t\t\t\t\t<div>Posted by {post.author}</div>\n\t\t\t\t\t\t\t<div>{moment(post.createAt.toDate()).calendar()}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"postComment\">\n\t\t\t\t\t\t<ul className=\"collection\">\n\t\t\t\t\t\t\t<PostCommentTest post_id = {post_id} comment = {post.comments.length > 0 ? post.comments.map((item) => item) : post.comments }/>\n\t\t\t\t\t\t\t<CommentRegister postID = {this.props.match.params.id} />\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ (auth.uid === post.authorId) && /* 작성자에게만 수정/삭제 버튼이 생성됨. */\n\t\t\t\t\t\t<div className=\"revise-delete right\">\n\t\t\t\t\t\t\t{/* <Link to= {{\n\t\t\t\t\t\t\t\tpathname: '/community/'+`${post.category}`+'/createPost',\n\t\t\t\t\t\t\t\tpost_id: `${this.props.match.params.id}`,\n\t\t\t\t\t\t\t\ttitle: `${post.title}`,\n\t\t\t\t\t\t\t\tcontent: `${post.content}`,\n\t\t\t\t\t\t\t\tpost_img:`${post.post_img}`,\n\t\t\t\t\t\t\t\tcheck_update: true,\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<button className=\"btn\">수정</button>\n\t\t\t\t\t\t\t</Link> */}\n\t\t\t\t\t\t\t<form onSubmit = {this.handleSubmit}>\n\t\t\t\t\t\t\t\t<div className=\"inputfield\">\n\t\t\t\t\t\t\t\t\t<button className=\"btn myomColor-background\">삭제</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else{\n\t\t\treturn (\n\t\t\t\t<div className=\"container center\">\n\t\t\t\t\t<p>게시글 로딩중...</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst id = ownProps.match.params.id;\n\tconst posts = state.firestore.data.posts;\n\tconst post = posts? posts[id] : null\n\treturn {\n\t\tpost: post,\n\t\tauth: state.firebase.auth\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn{\n\t\tpostDelete: (docID, history) => dispatch(postDelete(docID, history)),\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\t\tfirestoreConnect((props) => {\n\t\t\treturn [\n\t\t\t\t{ collection: 'posts', doc: props.match.params.id}\n\t\t\t]\n\t\t}),\n)(PostDetails);"]},"metadata":{},"sourceType":"module"}