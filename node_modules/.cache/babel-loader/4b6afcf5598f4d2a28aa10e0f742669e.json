{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/layout/Navbar.js\";\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLink';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport './navbar.css';\nimport Loader from '../functionalComponents/Loader';\n\nconst Navbar = props => {\n  if (!isLoaded(props.auth) || !isLoaded(props.profile)) return React.createElement(\"div\", {\n    className: \"navbar-fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nav-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"brand-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/img/logo/myom_logo13.png\",\n    width: \"120px\",\n    height: \"35px\",\n    className: \"myom_logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })))));\n  const auth = props.auth,\n        profile = props.profile;\n  const links = auth.uid ? React.createElement(SignedInLinks, {\n    profile: profile,\n    auth: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(SignedOutLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"navbar-fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nav-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"brand-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/img/logo/myom_logo13.png\",\n    width: \"120px\",\n    height: \"35px\",\n    className: \"myom_logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), !isLoaded(auth) ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : isEmpty(auth) ? React.createElement(SignedOutLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(SignedInLinks, {\n    profile: profile,\n    auth: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/layout/Navbar.js"],"names":["React","Fragment","Link","SignedInLinks","SignedOutLinks","connect","firestoreConnect","isLoaded","isEmpty","Loader","Navbar","props","auth","profile","links","uid","mapStateToProps","state","firebase"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,sBAApD;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,MAAG,CAACJ,QAAQ,CAACI,KAAK,CAACC,IAAP,CAAT,IAAyB,CAACL,QAAQ,CAACI,KAAK,CAACE,OAAP,CAArC,EAAsD,OACpD;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC;AAAK,IAAA,GAAG,EAAC,2BAAT;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAmD,IAAA,MAAM,EAAC,MAA1D;AAAiE,IAAA,SAAS,EAAC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,CADF,CADF,CADF,CADoD;AAD9B,QAWhBD,IAXgB,GAWCD,KAXD,CAWhBC,IAXgB;AAAA,QAWVC,OAXU,GAWCF,KAXD,CAWVE,OAXU;AAYxB,QAAMC,KAAK,GAAGF,IAAI,CAACG,GAAL,GAAW,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEF,OAAxB;AAAiC,IAAA,IAAI,EAAGD,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,GAA8D,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5E;AAED,SACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC;AAAK,IAAA,GAAG,EAAC,2BAAT;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAmD,IAAA,MAAM,EAAC,MAA1D;AAAiE,IAAA,SAAS,EAAC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,CAFJ,EAIM,CAACL,QAAQ,CAACK,IAAD,CAAT,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEIJ,OAAO,CAACI,IAAD,CAAP,GACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAEE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC,OAAxB;AAAiC,IAAA,IAAI,EAAID,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,CADF,CADF,CADF,CADH;AAqBA,CAnCD;;AAoCA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACC,QAAN,CAAeN,IADhB;AAELC,IAAAA,OAAO,EAAEI,KAAK,CAACC,QAAN,CAAeL;AAFnB,GAAP;AAID,CALD;;AAMA,eAAeR,OAAO,CAACW,eAAD,CAAP,CAAyBN,MAAzB,CAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLink';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport './navbar.css';\nimport Loader from '../functionalComponents/Loader';\n\nconst Navbar = (props) => {\n  if(!isLoaded(props.auth) || !isLoaded(props.profile)) return (\n    <div className=\"navbar-fixed\">\n      <nav className=\"\">\n        <div className=\"nav-wrapper\">\n          <Link to='/' className='brand-logo'><img src=\"/img/logo/myom_logo13.png\" width=\"120px\" height=\"35px\" className=\"myom_logo\" /></Link>\n        </div>\n      </nav>\n    </div>\n  )\n\n  const { auth, profile} = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} auth={ auth }/> : <SignedOutLinks />;\n\n\treturn (\n    <Fragment>\n      <div className=\"navbar-fixed\">\n        <nav className=''>\n          <div className=\"nav-wrapper\">\n            \n              <Link to='/' className='brand-logo'><img src=\"/img/logo/myom_logo13.png\" width=\"120px\" height=\"35px\" className=\"myom_logo\" /></Link>\n              {\n                !isLoaded(auth)\n                  ? <Loader />\n                  : isEmpty(auth)\n                    ? <SignedOutLinks />\n                    : <SignedInLinks profile={profile} auth = {auth} />\n              }\n            \n          </div>\n        </nav>\n      </div>\n    </Fragment>\n\n\t)\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  }\n}\nexport default connect(mapStateToProps)(Navbar);"]},"metadata":{},"sourceType":"module"}