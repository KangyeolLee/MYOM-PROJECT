{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/community/CommentRegister.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { commentRegister, _update_comment } from '../../store/actions/postAction';\n\nclass CommentRegister extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: '',\n      ['comments' + this.props.update_key]: this.props.update_data\n    };\n\n    this.handleCancel = e => {\n      e.preventDefault();\n      const label = document.querySelector('#comment_forLabel');\n      label.classList.remove('active');\n      this.setState({\n        comment: ''\n      });\n    };\n\n    this.handleUpdate = e => {\n      e.preventDefault();\n\n      this.props._update_comment(this.props.postID, this.props.update_key, this.state['comments' + this.props.update_key]);\n\n      this.props._check_update(e);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      if (!this.props.auth.emailVerified) {\n        alert('이메일 인증이 필요합니다.'); // this.props.history.push('/emailVerification')\n\n        return e.preventDefault();\n      }\n\n      e.preventDefault();\n      document.querySelector('#comment').value = '';\n      document.querySelector('#comment_forLabel').className = '';\n      this.props.commentRegister(this.props.postID, this.state);\n      this.handleCancel(e);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          update_data = _this$props.update_data,\n          _check_update = _this$props._check_update,\n          update_key = _this$props.update_key;\n    console.log(this.props);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, update_data ? React.createElement(\"form\", {\n      onSubmit: this.handleUpdate,\n      className: \"collection-item comment_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons prefix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"mode_edit\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: 'comments' + update_key,\n      className: \"materialize-textarea\",\n      onChange: this.handleChange,\n      value: this.state['comments' + this.props.update_key],\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: 'comments' + update_key,\n      className: \"active\",\n      id: \"comment_forLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\uB313\\uAE00\\uC218\\uC815\"), React.createElement(\"button\", {\n      className: \"btn waves-effect indigo right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\uC218\\uC815 \"), this.state['comments' + this.props.update_key] ? React.createElement(\"button\", {\n      onClick: _check_update,\n      className: \"btn-flat waves-effect right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\uCDE8\\uC18C\") : null)) : React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"collection-item comment_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons prefix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"mode_edit\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"comment\",\n      className: \"materialize-textarea\",\n      onChange: this.handleChange,\n      value: this.state.comment,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"comment\",\n      id: \"comment_forLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\uB313\\uAE00\"), this.state.comment ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn waves-effect indigo right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\uB313\\uAE00 \\uB4F1\\uB85D\"), React.createElement(\"button\", {\n      onClick: this.handleCancel,\n      className: \"btn-flat waves-effect right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"\\uCDE8\\uC18C\")) : null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapStateToDispatch = dispatch => {\n  return {\n    commentRegister: (docID, commentData) => dispatch(commentRegister(docID, commentData)),\n    _update_comment: (post_id, comment_id, updating_data) => dispatch(_update_comment(post_id, comment_id, updating_data))\n  };\n};\n\nexport default connect(mapStateToProps, mapStateToDispatch)(CommentRegister);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/community/CommentRegister.js"],"names":["React","Component","Fragment","connect","commentRegister","_update_comment","CommentRegister","state","comment","props","update_key","update_data","handleCancel","e","preventDefault","label","document","querySelector","classList","remove","setState","handleUpdate","postID","_check_update","handleChange","target","id","value","handleSubmit","auth","emailVerified","alert","className","render","console","log","mapStateToProps","firebase","mapStateToDispatch","dispatch","docID","commentData","post_id","comment_id","updating_data"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { commentRegister, _update_comment } from '../../store/actions/postAction'\n\nclass CommentRegister extends Component{\n\tstate = {\n\t\tcomment: '',\n\t\t['comments'+this.props.update_key] : this.props.update_data\n\t}\n\n\thandleCancel = (e) => {\n\t\te.preventDefault();\n\t\tconst label = document.querySelector('#comment_forLabel');\n\t\tlabel.classList.remove('active');\n\t\tthis.setState({\n\t\t\tcomment: '',\n\t\t})\n\t}\n\n\thandleUpdate = (e) => {\n\t\te.preventDefault();\n\t\tthis.props._update_comment(this.props.postID, this.props.update_key, this.state['comments' + this.props.update_key]);\n\t\tthis.props._check_update(e);\n\t}\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.id] : e.target.value,\n\t\t})\n\t}\n\n\thandleSubmit = (e) => {\n\t\tif(!this.props.auth.emailVerified){\n\t\t\talert('이메일 인증이 필요합니다.');\n\t\t\t// this.props.history.push('/emailVerification')\n\t\t\treturn e.preventDefault();\n\t\t}\n\t\te.preventDefault();\n\t\tdocument.querySelector('#comment').value= '';\n\t\tdocument.querySelector('#comment_forLabel').className= '';\n\t\tthis.props.commentRegister(this.props.postID, this.state);\n\t\tthis.handleCancel(e);\n\t}\n\trender(){\n\t\tconst { update_data, _check_update, update_key } = this.props;\n\t\tconsole.log(this.props);\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t{\n\t\t\t\t(update_data)\n\t\t\t\t\t? (\t\n\t\t\t\t\t\t<form onSubmit={this.handleUpdate} className=\"collection-item comment_form\">\n\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t<i className=\"material-icons prefix\">mode_edit</i>\n\t\t\t\t\t\t\t\t<textarea type=\"text\" id= {'comments' + update_key} className=\"materialize-textarea\" onChange = {this.handleChange} value={this.state['comments'+this.props.update_key]} required/>\n\t\t\t\t\t\t\t\t<label htmlFor={'comments' + update_key} className=\"active\" id=\"comment_forLabel\">댓글수정</label>\n\t\t\t\t\t\t\t\t<button className=\"btn waves-effect indigo right\">수정 </button>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t(this.state['comments'+this.props.update_key]) ? <button onClick = {_check_update} className=\"btn-flat waves-effect right\">취소</button> : null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t) \n\t\t\t\t\t: (\n\t\t\t\t\t\t<form onSubmit = {this.handleSubmit} className=\"collection-item comment_form\">\n\t\t\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t\t\t<i className=\"material-icons prefix\">mode_edit</i>\n\t\t\t\t\t\t\t\t<textarea type=\"text\" id=\"comment\" className=\"materialize-textarea\" onChange = {this.handleChange} value={this.state.comment} required/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"comment\" id=\"comment_forLabel\">댓글</label>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t(this.state.comment) \n\t\t\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn waves-effect indigo right\">댓글 등록</button>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick = {this.handleCancel} className=\"btn-flat waves-effect right\">취소</button> \n\t\t\t\t\t\t\t\t\t\t</Fragment> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn{\n\t\tauth: state.firebase.auth,\n\t}\n}\n\nconst mapStateToDispatch = (dispatch) => {\n\treturn{\n\t\tcommentRegister: (docID, commentData) => dispatch(commentRegister(docID, commentData)),\n\t\t_update_comment: (post_id, comment_id, updating_data) => dispatch(_update_comment(post_id, comment_id, updating_data))\n\t}\n}\n\nexport default connect(mapStateToProps, mapStateToDispatch)(CommentRegister)\n\n"]},"metadata":{},"sourceType":"module"}