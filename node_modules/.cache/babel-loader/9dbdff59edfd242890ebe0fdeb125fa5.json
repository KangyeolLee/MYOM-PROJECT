{"ast":null,"code":"import _objectSpread from \"/Users/JeHongHwang/Desktop/leekang/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/service/allservice/AllService.js\";\nimport React, { Component } from 'react';\nimport './AllService.css';\nimport { Link } from 'react-router-dom';\nimport Preloader from '../../functionalComponents/Preloader';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport TipsForCategory from '../../layout/TipsForCategory';\nimport ServicesSummary from '../summary/ServicesSummary';\n\nclass AllService extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      limit_list: 8,\n      moreServices: [],\n      nextRef: null,\n      loading: true\n    };\n\n    this.infiniteScroll = () => {\n      let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n      let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n      let clientHeight = document.documentElement.clientHeight; // if(scrollTop + clientHeight === scrollHeight && !this.state.loading) {\n      //   console.log('all services are loaded!')\n      //   return;\n      // }\n\n      if (scrollTop + clientHeight === scrollHeight) {\n        this.loadMoreServices();\n      }\n    };\n\n    this.loadMoreServices = async () => {\n      const firestore = this.props.firestore;\n      const _this$state = this.state,\n            limit_list = _this$state.limit_list,\n            nextRef = _this$state.nextRef;\n\n      if (!nextRef) {\n        const firstQuery = firestore.collection('testService').orderBy('timestamp', 'desc').limit(limit_list);\n        const firstSnaps = await firstQuery.get();\n        const firstVisible = firstSnaps.docs[firstSnaps.size - 1];\n        this.setState({\n          nextRef: firstVisible\n        });\n      }\n\n      try {\n        const nextQuery = firestore.collection('testService').orderBy('timestamp', 'desc').startAfter(this.state.nextRef).limit(limit_list);\n        const nextSnaps = await nextQuery.get();\n        const nextVisible = nextSnaps.docs[nextSnaps.size - 1];\n\n        if (!nextVisible) {\n          // when no more data in firestore\n          this.setState({\n            loading: false\n          });\n          return;\n        }\n\n        const loadedServices = nextSnaps.docs.map(doc => {\n          const id = doc.id;\n          const data = doc.data();\n          return _objectSpread({\n            id\n          }, data);\n        });\n        return this.setState({\n          moreServices: [...this.state.moreServices, ...loadedServices],\n          nextRef: nextVisible\n        });\n      } catch (err) {\n        console.log('error : ', err);\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // match the next changable props to state for initailizing\n    if (this.props.serviceList !== nextProps.serviceList) {\n      this.setState({\n        moreServices: nextProps.serviceList\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          serviceList = _this$props.serviceList;\n    const moreServices = this.state.moreServices;\n    return React.createElement(\"div\", {\n      className: \"allServices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"all-title col s12 notoSans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\uB458\\uB7EC\\uBCF4\\uAE30\"), React.createElement(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      style: {\n        width: '100%'\n      },\n      className: \"\",\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"/video/myom.mp4\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))))), React.createElement(TipsForCategory, {\n      category: \"\\uC601\\uD654\\uAC19\\uC740 \\uC601\\uC0C1\",\n      url: \"/community/user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"all_services_area row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"col s12 all-title notoSans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uB41C \\uC11C\\uBE44\\uC2A4\"), React.createElement(\"div\", {\n      className: \"all_services row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, !isLoaded(serviceList) ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : isEmpty(moreServices) ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uC11C\\uBE44\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\") : moreServices.map(item => {\n      let category = Object.entries(item).filter(category => category.pop() === 5);\n      return React.createElement(ServicesSummary, {\n        key: item.id,\n        service: item,\n        category: category[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // recommends: state.services.recommends,\n    serviceList: state.firestore.ordered.testService\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect(props => {\n  // console.log('in connecting : ', props);\n  return [{\n    collection: 'testService',\n    orderBy: ['timestamp', 'desc'],\n    limit: 8\n  }];\n}))(AllService); // const test = firestore.collection('services').orderBy('timestamp','desc').limit(6).get()\n//   .then(documentSnapshots => {\n//     const lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1];\n//     console.log(lastVisible);\n//   });","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/service/allservice/AllService.js"],"names":["React","Component","Link","Preloader","connect","compose","firestoreConnect","isLoaded","isEmpty","TipsForCategory","ServicesSummary","AllService","state","limit_list","moreServices","nextRef","loading","infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","loadMoreServices","firestore","props","firstQuery","collection","orderBy","limit","firstSnaps","get","firstVisible","docs","size","setState","nextQuery","startAfter","nextSnaps","nextVisible","loadedServices","map","doc","id","data","err","console","log","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","serviceList","render","match","width","item","category","Object","entries","filter","pop","mapStateToProps","ordered","testService"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AllService.css';\nimport { Link } from 'react-router-dom';\nimport Preloader from '../../functionalComponents/Preloader';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport TipsForCategory from '../../layout/TipsForCategory';\nimport ServicesSummary from '../summary/ServicesSummary';\n\nclass AllService extends Component {\n  state = {\n    limit_list : 8,\n    moreServices : [],\n    nextRef : null,\n    loading: true,\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll)\n  }\n\n  componentWillReceiveProps(nextProps) {  // match the next changable props to state for initailizing\n    if(this.props.serviceList !== nextProps.serviceList) {\n      this.setState({\n        moreServices: nextProps.serviceList,\n      })\n    }\n  }\n\n  infiniteScroll = () => {\n    let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    let clientHeight = document.documentElement.clientHeight;\n\n    // if(scrollTop + clientHeight === scrollHeight && !this.state.loading) {\n    //   console.log('all services are loaded!')\n    //   return;\n    // }\n\n    if(scrollTop + clientHeight === scrollHeight) {\n      this.loadMoreServices();\n    }\n  }\n\n  loadMoreServices = async () => {\n    const { firestore } = this.props;\n    const { limit_list, nextRef } = this.state;\n\n    if(!nextRef) {\n      const firstQuery = firestore.collection('testService')\n        .orderBy('timestamp', 'desc').limit(limit_list);\n      const firstSnaps = await firstQuery.get();\n      const firstVisible = firstSnaps.docs[firstSnaps.size - 1];\n      \n      this.setState({\n        nextRef: firstVisible,\n      })\n    }\n    \n    try {\n      const nextQuery = firestore.collection('testService')\n        .orderBy('timestamp', 'desc').startAfter(this.state.nextRef).limit(limit_list);\n      const nextSnaps = await nextQuery.get();\n      const nextVisible = nextSnaps.docs[nextSnaps.size - 1]\n      \n      if(!nextVisible) {  // when no more data in firestore\n        this.setState({\n          loading: false,\n        })\n        return;  \n      }\n\n      const loadedServices = nextSnaps.docs.map(doc => {\n        const id = doc.id;\n        const data = doc.data();\n        return { id, ...data }\n      })\n\n      return this.setState({\n        moreServices : [...this.state.moreServices, ...loadedServices],\n        nextRef : nextVisible,\n      })\n    } catch(err) {\n      console.log('error : ', err);\n    }   \n  }  \n\n  render() {\n    const { match, serviceList } = this.props;\n    const { moreServices } = this.state;\n\n    return (\n      <div className=\"allServices\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <h4 className='all-title col s12 notoSans'>둘러보기</h4>\n            <div className=\"col s12\">\n              <video style={{width: '100%'}} className='' controls>\n                <source src='/video/myom.mp4' type='video/mp4'/>\n                {/* https://console.firebase.google.com/project/marioplan-app-9bfcc/storage/marioplan-app-9bfcc.appspot.com/files~2Ftest~2F */}\n              </video>       \n            </div> \n          </div>\n        </div>\n\n        <TipsForCategory category='영화같은 영상' url='/community/user'/>\n\n        <div className=\"container\">\n          <ul className=\"all_services_area row\">\n            <h5 className='col s12 all-title notoSans'>등록된 서비스</h5>\n            <div className=\"all_services row\">\n            {\n              !isLoaded(serviceList)\n                ? <Preloader />\n                : isEmpty(moreServices)\n                  ? <div>아직 등록된 서비스가 없습니다.</div>\n                  : moreServices.map(item => {    \n                    let category = Object.entries(item).filter(category => category.pop() === 5 );\n                    return (\n                      <ServicesSummary key={item.id} service={item} category={category[0]} />\n                    )\n                  })                 \n            }\n            </div>\n          </ul>\n        </div>\n           \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // recommends: state.services.recommends,\n    serviceList: state.firestore.ordered.testService\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect((props) => {\n    // console.log('in connecting : ', props);\n    return [ { collection: 'testService', orderBy: ['timestamp', 'desc'], limit: 8 } ]\n  }),\n)(AllService);\n\n  // const test = firestore.collection('services').orderBy('timestamp','desc').limit(6).get()\n  //   .then(documentSnapshots => {\n  //     const lastVisible = documentSnapshots.docs[documentSnapshots.docs.length-1];\n  //     console.log(lastVisible);\n  //   });"]},"metadata":{},"sourceType":"module"}