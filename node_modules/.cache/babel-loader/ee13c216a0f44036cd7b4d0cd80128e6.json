{"ast":null,"code":"var Mexp = require('./math_function.js');\n\nfunction inc(arr, val) {\n  for (var i = 0; i < arr.length; i++) arr[i] += val;\n\n  return arr;\n}\n\nvar token = ['sin', 'cos', 'tan', 'pi', '(', ')', 'P', 'C', 'asin', 'acos', 'atan', '7', '8', '9', 'int', 'cosh', 'acosh', 'ln', '^', 'root', '4', '5', '6', '/', '!', 'tanh', 'atanh', 'Mod', '1', '2', '3', '*', 'sinh', 'asinh', 'e', 'log', '0', '.', '+', '-', ',', 'Sigma', 'n', 'Pi', 'pow'];\nvar show = ['sin', 'cos', 'tan', '&pi;', '(', ')', 'P', 'C', 'asin', 'acos', 'atan', '7', '8', '9', 'Int', 'cosh', 'acosh', ' ln', '^', 'root', '4', '5', '6', '&divide;', '!', 'tanh', 'atanh', ' Mod ', '1', '2', '3', '&times;', 'sinh', 'asinh', 'e', ' log', '0', '.', '+', '-', ',', '&Sigma;', 'n', '&Pi;', 'pow'];\nvar eva = [Mexp.math.sin, Mexp.math.cos, Mexp.math.tan, 'PI', '(', ')', Mexp.math.P, Mexp.math.C, Mexp.math.asin, Mexp.math.acos, Mexp.math.atan, '7', '8', '9', Math.floor, Mexp.math.cosh, Mexp.math.acosh, Math.log, Math.pow, Math.sqrt, '4', '5', '6', Mexp.math.div, Mexp.math.fact, Mexp.math.tanh, Mexp.math.atanh, Mexp.math.mod, '1', '2', '3', Mexp.math.mul, Mexp.math.sinh, Mexp.math.asinh, 'E', Mexp.math.log, '0', '.', Mexp.math.add, Mexp.math.sub, ',', Mexp.math.sigma, 'n', Mexp.math.Pi, Math.pow];\nvar preced = {\n  0: 11,\n  1: 0,\n  2: 3,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  7: 11,\n  8: 11,\n  9: 1,\n  10: 10,\n  11: 0,\n  12: 11,\n  13: 0\n};\nvar type = [0, 0, 0, 3, 4, 5, 10, 10, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 10, 0, 1, 1, 1, 2, 7, 0, 0, 2, 1, 1, 1, 2, 0, 0, 3, 0, 1, 6, 9, 9, 11, 12, 13, 12, 8];\n/*\r\n0 : function with syntax function_name(Maths_exp)\r\n1 : numbers\r\n2 : binary operators like * / Mod left associate and same precedence\r\n3 : Math constant values like e,pi,Cruncher ans\r\n4 : opening bracket\r\n5 : closing bracket\r\n6 : decimal\r\n7 : function with syntax (Math_exp)function_name\r\n8: function with syntax function_name(Math_exp1,Math_exp2)\r\n9 : binary operator like +,-\r\n10: binary operator like P C or ^\r\n11: ,\r\n12: function with , seperated three parameters\r\n13: variable of Sigma function\r\n*/\n\nvar type0 = {\n  0: true,\n  1: true,\n  3: true,\n  4: true,\n  6: true,\n  8: true,\n  9: true,\n  12: true,\n  13: true\n},\n    //type2:true,type4:true,type9:true,type11:true,type21:true,type22\ntype1 = {\n  0: true,\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n  6: true,\n  7: true,\n  8: true,\n  9: true,\n  10: true,\n  11: true,\n  12: true,\n  13: true\n},\n    //type3:true,type5:true,type7:true,type23\ntype_1 = {\n  0: true,\n  3: true,\n  4: true,\n  8: true,\n  12: true,\n  13: true\n},\n    empty = {},\n    type_3 = {\n  0: true,\n  1: true,\n  3: true,\n  4: true,\n  6: true,\n  8: true,\n  12: true,\n  13: true\n},\n    //type_5:true,type_7:true,type_23\ntype6 = {\n  1: true\n},\n    newAr = [[], [\"1\", \"2\", \"3\", \"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"+\", \"-\", \"*\", \"/\", \"(\", \")\", \"^\", \"!\", \"P\", \"C\", \"e\", \"0\", \".\", \",\", \"n\"], [\"pi\", \"ln\", \"Pi\"], [\"sin\", \"cos\", \"tan\", \"Del\", \"int\", \"Mod\", \"log\", \"pow\"], [\"asin\", \"acos\", \"atan\", \"cosh\", \"root\", \"tanh\", \"sinh\"], [\"acosh\", \"atanh\", \"asinh\", \"Sigma\"]];\n\nfunction match(str1, str2, i, x) {\n  for (var f = 0; f < x; f++) {\n    if (str1[i + f] !== str2[f]) return false;\n  }\n\n  return true;\n}\n\nMexp.addToken = function (tokens) {\n  for (i = 0; i < tokens.length; i++) {\n    x = tokens[i].token.length;\n    var temp = -1; //newAr is a specially designed data structure in which 1D array at location one of 2d array has all string with length 1 2 with 2 and so on\n\n    if (x < newAr.length) //match to check if token is really huge and not existing\n      //if not checked it will break in next line as undefined index\n      for (y = 0; y < newAr[x].length; y++) {\n        if (tokens[i].token === newAr[x][y]) {\n          temp = token.indexOf(newAr[x][y]);\n          break;\n        }\n      }\n\n    if (temp === -1) {\n      token.push(tokens[i].token);\n      type.push(tokens[i].type);\n      if (newAr.length <= tokens[i].token.length) newAr[tokens[i].token.length] = [];\n      newAr[tokens[i].token.length].push(tokens[i].token);\n      eva.push(tokens[i].value);\n      show.push(tokens[i].show);\n    } else {\n      token[temp] = tokens[i].token;\n      type[temp] = tokens[i].type;\n      eva[temp] = tokens[i].value;\n      show[temp] = tokens[i].show;\n    }\n  }\n};\n\nMexp.lex = function (inp, tokens) {\n  'use strict';\n\n  var str = [{\n    type: 4,\n    value: \"(\",\n    show: \"(\",\n    pre: 0\n  }];\n  var ptc = []; //Parenthesis to close at the beginning is after one token\n\n  var inpStr = inp;\n  var key;\n  var pcounter = 0;\n  var allowed = type0;\n  var bracToClose = 0;\n  var asterick = empty;\n  var prevKey = '';\n  var i, x, y;\n  if (typeof tokens !== \"undefined\") Mexp.addToken(tokens);\n  var obj = {};\n\n  for (i = 0; i < inpStr.length; i++) {\n    if (inpStr[i] == ' ') {\n      continue;\n    }\n\n    key = '';\n\n    sec: for (x = inpStr.length - i > newAr.length - 2 ? newAr.length - 1 : inpStr.length - i; x > 0; x--) {\n      for (y = 0; y < newAr[x].length; y++) {\n        if (match(inpStr, newAr[x][y], i, x)) {\n          key = newAr[x][y];\n          break sec;\n        }\n      }\n    }\n\n    i += key.length - 1;\n\n    if (key === '') {\n      throw new Mexp.exception(\"Can't understand after \" + inpStr.slice(i));\n    }\n\n    var index = token.indexOf(key);\n    var cToken = key;\n    var cType = type[index];\n    var cEv = eva[index];\n    var cPre = preced[cType];\n    var cShow = show[index];\n    var pre = str[str.length - 1];\n\n    for (j = ptc.length; j--;) {\n      //loop over ptc\n      if (ptc[j] === 0) {\n        if ([0, 2, 3, 5, 9, 11, 12, 13].indexOf(cType) !== -1) {\n          if (allowed[cType] !== true) {\n            throw new Mexp.exception(key + \" is not allowed after \" + prevKey);\n          }\n\n          str.push({\n            value: \")\",\n            type: 5,\n            pre: 0,\n            show: \")\"\n          });\n          allowed = type1;\n          asterick = type_3;\n          inc(ptc, -1).pop();\n        }\n      }\n    }\n\n    if (allowed[cType] !== true) {\n      throw new Mexp.exception(key + \" is not allowed after \" + prevKey);\n    }\n\n    if (asterick[cType] === true) {\n      cType = 2;\n      cEv = Mexp.math.mul;\n      cShow = \"&times;\";\n      cPre = 3;\n      i = i - key.length;\n    }\n\n    obj = {\n      value: cEv,\n      type: cType,\n      pre: cPre,\n      show: cShow\n    };\n\n    if (cType === 0) {\n      allowed = type0;\n      asterick = empty;\n      inc(ptc, 2).push(2);\n      str.push(obj);\n      str.push({\n        value: \"(\",\n        type: 4,\n        pre: 0,\n        show: \"(\"\n      });\n    } else if (cType === 1) {\n      if (pre.type === 1) {\n        pre.value += cEv;\n        inc(ptc, 1);\n      } else {\n        str.push(obj);\n      }\n\n      allowed = type1;\n      asterick = type_1;\n    } else if (cType === 2) {\n      allowed = type0;\n      asterick = empty;\n      inc(ptc, 2);\n      str.push(obj);\n    } else if (cType === 3) {\n      //constant\n      str.push(obj);\n      allowed = type1;\n      asterick = type_3;\n    } else if (cType === 4) {\n      pcounter += ptc.length;\n      ptc = [];\n      bracToClose++;\n      allowed = type0;\n      asterick = empty;\n      str.push(obj);\n    } else if (cType === 5) {\n      if (!bracToClose) {\n        throw new Mexp.exception(\"Closing parenthesis are more than opening one, wait What!!!\");\n      }\n\n      while (pcounter--) {\n        //loop over ptc\n        str.push({\n          value: \")\",\n          type: 5,\n          pre: 0,\n          show: \")\"\n        });\n      }\n\n      pcounter = 0;\n      bracToClose--;\n      allowed = type1;\n      asterick = type_3;\n      str.push(obj);\n    } else if (cType === 6) {\n      if (pre.hasDec) {\n        throw new Mexp.exception(\"Two decimals are not allowed in one number\");\n      }\n\n      if (pre.type !== 1) {\n        pre = {\n          value: 0,\n          type: 1,\n          pre: 0\n        }; //pre needs to be changed as it will the last value now to be safe in later code\n\n        str.push(pre);\n        inc(ptc, -1);\n      }\n\n      allowed = type6;\n      inc(ptc, 1);\n      asterick = empty;\n      pre.value += cEv;\n      pre.hasDec = true;\n    } else if (cType === 7) {\n      allowed = type1;\n      asterick = type_3;\n      inc(ptc, 1);\n      str.push(obj);\n    }\n\n    if (cType === 8) {\n      allowed = type0;\n      asterick = empty;\n      inc(ptc, 4).push(4);\n      str.push(obj);\n      str.push({\n        value: \"(\",\n        type: 4,\n        pre: 0,\n        show: \"(\"\n      });\n    } else if (cType === 9) {\n      if (pre.type === 9) {\n        if (pre.value === Mexp.math.add) {\n          pre.value = cEv;\n          pre.show = cShow;\n          inc(ptc, 1);\n        } else if (pre.value === Mexp.math.sub && cShow === '-') {\n          pre.value = Mexp.math.add;\n          pre.show = '+';\n          inc(ptc, 1);\n        }\n      } else if (pre.type !== 5 && pre.type !== 7 && pre.type !== 1 && pre.type !== 3 && pre.type !== 13) {\n        //changesign only when negative is found\n        if (cToken === '-') {\n          //do nothing for + token\n          //don't add with the above if statement as that will run the else statement of parent if on Ctoken +\n          allowed = type0;\n          asterick = empty;\n          inc(ptc, 2).push(2);\n          str.push({\n            value: Mexp.math.changeSign,\n            type: 0,\n            pre: 21,\n            show: \"-\"\n          });\n          str.push({\n            value: \"(\",\n            type: 4,\n            pre: 0,\n            show: \"(\"\n          });\n        }\n      } else {\n        str.push(obj);\n        inc(ptc, 2);\n      }\n\n      allowed = type0;\n      asterick = empty;\n    } else if (cType === 10) {\n      allowed = type0;\n      asterick = empty;\n      inc(ptc, 2);\n      str.push(obj);\n    } else if (cType === 11) {\n      allowed = type0;\n      asterick = empty;\n      str.push(obj);\n    } else if (cType === 12) {\n      allowed = type0;\n      asterick = empty;\n      inc(ptc, 6).push(6);\n      str.push(obj);\n      str.push({\n        value: \"(\",\n        type: 4,\n        pre: 0\n      });\n    } else if (cType === 13) {\n      allowed = type1;\n      asterick = type_3;\n      str.push(obj);\n    }\n\n    inc(ptc, -1);\n    prevKey = key;\n  }\n\n  for (var j = ptc.length; j--;) {\n    //loop over ptc\n    if (ptc[j] === 0) {\n      str.push({\n        value: \")\",\n        show: \")\",\n        type: 5,\n        pre: 3\n      });\n      inc(ptc, -1).pop();\n    }\n  }\n\n  if (allowed[5] !== true) {\n    throw new Mexp.exception(\"complete the expression\");\n  }\n\n  while (bracToClose--) str.push({\n    value: \")\",\n    show: \")\",\n    type: 5,\n    pre: 3\n  });\n\n  str.push({\n    type: 5,\n    value: \")\",\n    show: \")\",\n    pre: 0\n  }); //        console.log(str);\n\n  return new Mexp(str);\n};\n\nmodule.exports = Mexp;","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/node_modules/math-expression-evaluator/src/lexer.js"],"names":["Mexp","require","inc","arr","val","i","length","token","show","eva","math","sin","cos","tan","P","C","asin","acos","atan","Math","floor","cosh","acosh","log","pow","sqrt","div","fact","tanh","atanh","mod","mul","sinh","asinh","add","sub","sigma","Pi","preced","type","type0","type1","type_1","empty","type_3","type6","newAr","match","str1","str2","x","f","addToken","tokens","temp","y","indexOf","push","value","lex","inp","str","pre","ptc","inpStr","key","pcounter","allowed","bracToClose","asterick","prevKey","obj","sec","exception","slice","index","cToken","cType","cEv","cPre","cShow","j","pop","hasDec","changeSign","module","exports"],"mappings":"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","sourcesContent":["var Mexp=require('./math_function.js');\r\n\tfunction inc(arr,val){\r\n\t\tfor(var i=0;i<arr.length;i++)\r\n\t\t\tarr[i]+=val;\r\n\t\treturn arr;\r\n\t}\r\n\tvar token=['sin','cos','tan','pi','(',')','P','C',\r\n\t\t  'asin','acos','atan','7','8','9','int',\r\n\t\t  'cosh','acosh','ln','^','root','4','5','6','/','!',\r\n\t\t  'tanh','atanh','Mod','1','2','3','*',\r\n\t\t  'sinh','asinh','e','log','0','.','+','-',',','Sigma','n','Pi','pow'];\r\n\tvar show=['sin','cos','tan','&pi;','(',')','P','C',\r\n\t\t'asin','acos','atan','7','8','9','Int',\r\n\t\t'cosh','acosh',' ln','^','root','4','5','6','&divide;','!',\r\n\t\t'tanh','atanh',' Mod ','1','2','3','&times;',\r\n\t\t'sinh','asinh','e',' log','0','.','+','-',',','&Sigma;','n','&Pi;','pow'];\r\n\tvar eva=[Mexp.math.sin,Mexp.math.cos,Mexp.math.tan,'PI','(',')',Mexp.math.P,Mexp.math.C,\r\n\t\tMexp.math.asin,Mexp.math.acos,Mexp.math.atan,'7','8','9',Math.floor,\r\n\t\tMexp.math.cosh,Mexp.math.acosh,Math.log,Math.pow,Math.sqrt,'4','5','6',Mexp.math.div,Mexp.math.fact,\r\n\t\tMexp.math.tanh,Mexp.math.atanh,Mexp.math.mod,'1','2','3',Mexp.math.mul,\r\n\t\tMexp.math.sinh,Mexp.math.asinh,'E',Mexp.math.log,'0','.',Mexp.math.add,Mexp.math.sub,',',Mexp.math.sigma,'n',Mexp.math.Pi,Math.pow];\r\n\tvar preced={0:11,1:0,2:3,3:0,4:0,5:0,6:0,7:11,8:11,9:1,10:10,11:0,12:11,13:0};\r\n\tvar type=[0,0,0,3,4,5,10,10,\r\n\t\t0,0,0,1,1,1,0,\r\n\t\t0,0,0,10,0,1,1,1,2,7,\r\n\t\t0,0,2,1,1,1,2,\r\n\t\t0,0,3,0,1,6,9,9,11,12,13,12,8];\r\n\t /*\r\n\t0 : function with syntax function_name(Maths_exp)\r\n\t1 : numbers\r\n\t2 : binary operators like * / Mod left associate and same precedence\r\n\t3 : Math constant values like e,pi,Cruncher ans\r\n\t4 : opening bracket\r\n\t5 : closing bracket\r\n\t6 : decimal\r\n\t7 : function with syntax (Math_exp)function_name\r\n\t8: function with syntax function_name(Math_exp1,Math_exp2)\r\n\t9 : binary operator like +,-\r\n\t10: binary operator like P C or ^\r\n\t11: ,\r\n\t12: function with , seperated three parameters\r\n\t13: variable of Sigma function\r\n\t */\r\n\tvar type0={0:true,1:true,3:true,4:true,6:true,8:true,9:true,12:true,13:true},//type2:true,type4:true,type9:true,type11:true,type21:true,type22\r\n\ttype1={0:true,1:true,2:true,3:true,4:true,5:true,6:true,7:true,8:true,9:true,10:true,11:true,12:true,13:true},//type3:true,type5:true,type7:true,type23\r\n\ttype_1={0:true,3:true,4:true,8:true,12:true,13:true},\r\n\tempty={},\r\n\ttype_3={0:true,1:true,3:true,4:true,6:true,8:true,12:true,13:true},//type_5:true,type_7:true,type_23\r\n\ttype6={1:true},\r\n\tnewAr=[[],\r\n\t\t\t[\"1\",\"2\",\"3\",\"7\",\"8\",\"9\",\"4\",\"5\",\"6\",\"+\",\"-\",\"*\",\"/\",\"(\",\")\",\"^\",\"!\",\"P\",\"C\",\"e\",\"0\",\".\",\",\",\"n\"],\r\n\t\t\t[\"pi\",\"ln\",\"Pi\"],\r\n\t\t\t[\"sin\",\"cos\",\"tan\",\"Del\",\"int\",\"Mod\",\"log\",\"pow\"],\r\n\t\t\t[\"asin\",\"acos\",\"atan\",\"cosh\",\"root\",\"tanh\",\"sinh\"],\r\n\t\t\t[\"acosh\",\"atanh\",\"asinh\",\"Sigma\"]];\r\n\tfunction match(str1,str2,i,x){\r\n\t\tfor(var f=0;f<x;f++){\r\n\t\t\tif (str1[i+f]!==str2[f])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tMexp.addToken=function(tokens){\r\n\t\tfor(i=0;i<tokens.length;i++){\r\n\t\t\tx=tokens[i].token.length;\r\n\t\t\tvar temp=-1;\r\n\r\n\t\t\t//newAr is a specially designed data structure in which 1D array at location one of 2d array has all string with length 1 2 with 2 and so on\r\n\r\n\t\t\tif (x<newAr.length)\t//match to check if token is really huge and not existing\r\n\t\t\t\t\t\t\t\t//if not checked it will break in next line as undefined index\r\n\t\t\t\tfor(y=0;y<newAr[x].length;y++){\r\n\t\t\t\t\tif (tokens[i].token===newAr[x][y]){\r\n\t\t\t\t\t\ttemp=token.indexOf(newAr[x][y]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tif (temp===-1) {\r\n\t\t\t\ttoken.push(tokens[i].token);\r\n\t\t\t\ttype.push(tokens[i].type);\r\n\t\t\t\tif(newAr.length<=tokens[i].token.length)\r\n\t\t\t\t\tnewAr[tokens[i].token.length]=[];\r\n\t\t\t\tnewAr[tokens[i].token.length].push(tokens[i].token);\r\n\t\t\t\teva.push(tokens[i].value);\r\n\t\t\t\tshow.push(tokens[i].show);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttoken[temp]=tokens[i].token;\r\n\t\t\t\ttype[temp]=tokens[i].type;\r\n\t\t\t\teva[temp]=tokens[i].value;\r\n\t\t\t\tshow[temp]=tokens[i].show;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tMexp.lex=function(inp,tokens){\r\n\t\t'use strict';\r\n\t\tvar str=[{type:4,value:\"(\",show:\"(\",pre:0}];\r\n\t\tvar ptc=[];\t//Parenthesis to close at the beginning is after one token\r\n\t\tvar inpStr=inp;\r\n\t\tvar key;\r\n        var pcounter=0;\r\n\t\tvar allowed=type0;\r\n\t\tvar bracToClose=0;\r\n\t\tvar asterick=empty;\r\n\t\tvar prevKey='';\r\n\t\tvar i,x,y;\r\n\t\tif(typeof tokens!==\"undefined\")\r\n\t\t\tMexp.addToken(tokens);\r\n\t\tvar obj={};\r\n\t\tfor(i=0;i<inpStr.length;i++){\r\n\t\t\tif (inpStr[i]==' ') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tkey='';\r\n\t\t\tsec:for(x=(inpStr.length-i>(newAr.length-2)?newAr.length-1:inpStr.length-i);x>0;x--){\r\n\t\t\t\tfor(y=0;y<newAr[x].length;y++){\r\n\t\t\t\t\tif (match(inpStr,newAr[x][y],i,x)){\r\n\t\t\t\t\t\tkey=newAr[x][y];\r\n\t\t\t\t\t\tbreak sec;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti+=key.length-1;\r\n\t\t\tif(key===''){\r\n\t\t\t\tthrow(new Mexp.exception(\"Can't understand after \"+inpStr.slice(i)));\r\n\t\t\t}\r\n\t\t\tvar index=token.indexOf(key);\r\n\t\t\tvar cToken=key;\r\n\t\t\tvar cType=type[index];\r\n\t\t\tvar cEv=eva[index];\r\n\t\t\tvar cPre=preced[cType];\r\n\t\t\tvar\tcShow=show[index];\r\n\t\t\tvar pre=str[str.length-1];\r\n\t\t\tfor(j=ptc.length;j--;){\t//loop over ptc\r\n\t\t\t\tif(ptc[j]===0){\r\n\t\t\t\t\tif([0,2,3,5,9,11,12,13].indexOf(cType)!==-1){\r\n\t\t\t\t\t\tif(allowed[cType]!==true){\r\n\t\t\t\t\t\t\tthrow(new Mexp.exception(key+\" is not allowed after \"+prevKey));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstr.push({value:\")\",type:5,pre:0,show:\")\"});\r\n\t\t\t\t\t\tallowed=type1;\r\n\t\t\t\t\t\tasterick=type_3;\r\n\t\t\t\t\t\tinc(ptc,-1).pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(allowed[cType]!==true){\r\n\t\t\t\tthrow(new Mexp.exception(key+\" is not allowed after \"+prevKey));\r\n\t\t\t}\r\n\t\t\tif(asterick[cType]===true){\r\n\t\t\t\tcType=2;\r\n\t\t\t\tcEv=Mexp.math.mul;\r\n\t\t\t\tcShow=\"&times;\";\r\n\t\t\t\tcPre=3;\r\n\t\t\t\ti=i-key.length;\r\n\t\t \t}\r\n\t\t\tobj={value:cEv,type:cType,pre:cPre,show:cShow};\r\n\t\t\tif(cType===0){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,2).push(2);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tstr.push({value:\"(\",type:4,pre:0,show:\"(\"});\r\n\t\t\t}\r\n\t\t\telse if(cType===1){\r\n\t\t\t\tif(pre.type===1){\r\n\t\t\t\t\tpre.value+=cEv;\r\n\t\t\t\t\tinc(ptc,1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstr.push(obj);\r\n\t\t\t\t}\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_1;\r\n\t\t\t}\r\n\t\t\telse if(cType===2){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,2);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===3){//constant\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t}\r\n\t\t\telse if(cType===4){\r\n                pcounter+=ptc.length;\r\n                ptc=[];\r\n\t\t\t\tbracToClose++;\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===5){\r\n\t\t\t\tif(!bracToClose){\r\n\t\t\t\t\tthrow(new Mexp.exception(\"Closing parenthesis are more than opening one, wait What!!!\"));\r\n\t\t\t\t}\r\n                while(pcounter--){\t//loop over ptc\r\n    \t\t\t\t\t\tstr.push({value:\")\",type:5,pre:0,show:\")\"});\r\n    \t\t\t}\r\n                pcounter=0;\r\n\t\t\t\tbracToClose--;\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===6){\r\n\t\t\t\tif(pre.hasDec){\r\n\t\t\t\t\tthrow(new Mexp.exception(\"Two decimals are not allowed in one number\"));\r\n\t\t\t\t}\r\n\t\t\t\tif(pre.type!==1){\r\n\t\t\t\t\tpre={value:0,type:1,pre:0};\t//pre needs to be changed as it will the last value now to be safe in later code\r\n\t\t\t\t\tstr.push(pre);\r\n\t\t\t\t\tinc(ptc,-1);\r\n\t\t\t\t}\r\n\t\t\t\tallowed=type6;\r\n\t\t\t\tinc(ptc,1);\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tpre.value+=cEv;\r\n\t\t\t\tpre.hasDec=true;\r\n\t\t\t}\r\n\t\t\telse if(cType===7){\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t\tinc(ptc,1);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\tif(cType===8){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,4).push(4);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tstr.push({value:\"(\",type:4,pre:0,show:\"(\"});\r\n\t\t\t}\r\n\t\t\telse if(cType===9){\r\n\t\t\t\tif(pre.type===9){\r\n\t\t\t\t\tif(pre.value===Mexp.math.add){\r\n\t\t\t\t\t\tpre.value=cEv;\r\n\t\t\t\t\t\tpre.show=cShow;\r\n\t\t\t\t\t\tinc(ptc,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(pre.value===Mexp.math.sub&&cShow==='-'){\r\n\t\t\t\t\t\tpre.value=Mexp.math.add;\r\n\t\t\t\t\t\tpre.show='+';\r\n\t\t\t\t\t\tinc(ptc,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(pre.type!==5&&pre.type!==7&&pre.type!==1&&pre.type!==3&&pre.type!==13){//changesign only when negative is found\r\n\t\t\t\t\tif(cToken==='-'){//do nothing for + token\r\n\t\t\t\t\t\t\t\t\t//don't add with the above if statement as that will run the else statement of parent if on Ctoken +\r\n\t\t\t\t\t\tallowed=type0;\r\n\t\t\t\t\t\tasterick=empty;\r\n\t\t\t\t\t\tinc(ptc,2).push(2);\r\n\t\t\t\t\t\tstr.push({value:Mexp.math.changeSign,type:0,pre:21,show:\"-\"});\r\n\t\t\t\t\t\tstr.push({value:\"(\",type:4,pre:0,show:\"(\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tstr.push(obj);\r\n\t\t\t\t\tinc(ptc,2);\r\n\t\t\t\t}\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t}\r\n\t\t\telse if(cType===10){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,2);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===11){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===12){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,6).push(6);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tstr.push({value:\"(\",type:4,pre:0});\r\n\t\t\t}\r\n\t\t\telse if(cType===13){\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\tinc(ptc,-1);\r\n\t\t\tprevKey=key;\r\n\t\t}\r\n\t\tfor(var j=ptc.length;j--;){\t//loop over ptc\r\n\t\t\tif(ptc[j]===0){\r\n\r\n\t\t\t\tstr.push({value:\")\",show:\")\",type:5,pre:3});\r\n\t\t\t\tinc(ptc,-1).pop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (allowed[5]!==true) {\r\n\t\t\tthrow(new Mexp.exception(\"complete the expression\"));\r\n\t\t}\r\n\t\twhile(bracToClose--)\r\n\t\t\tstr.push({value:\")\",show:\")\",type:5,pre:3});\r\n\r\n\t\tstr.push({type:5,value:\")\",show:\")\",pre:0});\r\n//        console.log(str);\r\n\t\treturn new Mexp(str);\r\n\t};\r\n    module.exports=Mexp;\r\n"]},"metadata":{},"sourceType":"script"}