{"ast":null,"code":"var _jsxFileName = \"/Users/JeHongHwang/Desktop/leekang/src/components/dashboard/ServicePreview.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport ServicesSummary from '../service/summary/ServicesSummary';\nimport Preloader from '../functionalComponents/Preloader';\nimport './servicePreview.css';\n\nconst ServicePreview = props => {\n  const allService = props.allService;\n  return React.createElement(\"div\", {\n    className: \"container servicePreview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"col s12 notoSans dashboard-subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\\uB41C \\uC11C\\uBE44\\uC2A4\", React.createElement(Link, {\n    to: \"/thema\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontSize: '15px',\n      fontWeight: '500',\n      color: '#3b3b3b'\n    },\n    className: \"moreBtn right notoSans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"\\uC804\\uCCB4\\uBCF4\\uAE30\")))), React.createElement(\"ul\", {\n    className: \"row all_services_area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, !isLoaded(allService) ? React.createElement(Preloader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : isEmpty(allService) ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uC11C\\uBE44\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\") : allService.map(item => {\n    let category = Object.entries(item).filter(category => category.pop() === 5);\n    return React.createElement(ServicesSummary, {\n      key: item.id,\n      service: item,\n      category: category[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    allService: state.firestore.ordered.allService\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect(props => {\n  return [{\n    collection: 'testService',\n    orderBy: ['timestamp', 'desc'],\n    limit: 8,\n    storeAs: 'allService'\n  }];\n}))(ServicePreview);","map":{"version":3,"sources":["/Users/JeHongHwang/Desktop/leekang/src/components/dashboard/ServicePreview.js"],"names":["React","Link","connect","compose","firestoreConnect","isLoaded","isEmpty","ServicesSummary","Preloader","ServicePreview","props","allService","fontSize","fontWeight","color","map","item","category","Object","entries","filter","pop","id","mapStateToProps","state","firestore","ordered","collection","orderBy","limit","storeAs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,sBAApD;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA,QACxBC,UADwB,GACTD,KADS,CACxBC,UADwB;AAEhC,SACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkB;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,KAAK,EAAE;AAA7C,KAAb;AAAsE,IAAA,SAAS,EAAC,wBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAlB,CAFF,CADF,CADF,EASE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,CAACT,QAAQ,CAACM,UAAD,CAAT,GACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEIL,OAAO,CAACK,UAAD,CAAP,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FADF,GAEEA,UAAU,CAACI,GAAX,CAAeC,IAAI,IAAI;AACrB,QAAIC,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,MAArB,CAA4BH,QAAQ,IAAIA,QAAQ,CAACI,GAAT,OAAmB,CAA3D,CAAf;AACA,WACE,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAEL,IAAI,CAACM,EAA3B;AAA+B,MAAA,OAAO,EAAEN,IAAxC;AAA8C,MAAA,QAAQ,EAAEC,QAAQ,CAAC,CAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GALD,CANR,CATF,CADF;AA2BD,CA7BD;;AA8BA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,UAAU,EAAEa,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBf;AAD/B,GAAP;AAGD,CAJD;;AAKA,eAAeR,OAAO,CACpBD,OAAO,CAACqB,eAAD,CADa,EAEpBnB,gBAAgB,CAAEM,KAAD,IAAW;AAC1B,SAAO,CACL;AAAEiB,IAAAA,UAAU,EAAE,aAAd;AAA6BC,IAAAA,OAAO,EAAE,CAAC,WAAD,EAAc,MAAd,CAAtC;AAA6DC,IAAAA,KAAK,EAAE,CAApE;AAAuEC,IAAAA,OAAO,EAAE;AAAhF,GADK,CAAP;AAGD,CAJe,CAFI,CAAP,CAObrB,cAPa,CAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\nimport ServicesSummary from '../service/summary/ServicesSummary';\nimport Preloader from '../functionalComponents/Preloader';\nimport './servicePreview.css';\n\nconst ServicePreview = (props) => {\n  const { allService } = props;\n  return (\n    <div className='container servicePreview'>\n      <div className=\"row\">\n        <h5 className=\"col s12 notoSans dashboard-subtitle\">\n          등록된 서비스\n          <Link to='/thema'><span style={{fontSize: '15px', fontWeight: '500', color: '#3b3b3b'}} className=\"moreBtn right notoSans\">전체보기</span></Link>\n        </h5>\n      </div>\n\n\n      <ul className=\"row all_services_area\">\n      {\n        !isLoaded(allService)\n          ? <Preloader />\n          : isEmpty(allService)\n            ? <div>아직 등록된 서비스가 없습니다.</div>\n            : allService.map(item => {\n                let category = Object.entries(item).filter(category => category.pop() === 5 );                   \n                return (\n                  <ServicesSummary key={item.id} service={item} category={category[0]}/>\n                )\n              })                 \n      }\n      </ul>\n\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    allService: state.firestore.ordered.allService,\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect((props) => {\n    return [\n      { collection: 'testService', orderBy: ['timestamp', 'desc'], limit: 8, storeAs: 'allService'}\n    ]\n  })\n)(ServicePreview);"]},"metadata":{},"sourceType":"module"}